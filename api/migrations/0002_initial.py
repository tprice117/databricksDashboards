# Generated by Django 4.1 on 2024-04-27 21:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("payment_methods", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="useraddress",
            name="default_payment_method",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="payment_methods.paymentmethod",
            ),
        ),
        migrations.AddField(
            model_name="useraddress",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="useraddress",
            name="user_address_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.useraddresstype",
            ),
        ),
        migrations.AddField(
            model_name="useraddress",
            name="user_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_addresses",
                to="api.usergroup",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="frequency",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.servicerecurringfrequency",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="order_group",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT, to="api.ordergroup"
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="service_day",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.dayofweek",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationservicerecurringfrequency",
            name="main_product_service_recurring_frequency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="api.mainproductservicerecurringfrequency",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationservicerecurringfrequency",
            name="seller_product_seller_location_service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="api.sellerproductsellerlocationservice",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationservice",
            name="seller_product_seller_location",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="service",
                to="api.sellerproductsellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationrental",
            name="seller_product_seller_location",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rental",
                to="api.sellerproductsellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationmaterialwastetype",
            name="main_product_waste_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="api.mainproductwastetype",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationmaterialwastetype",
            name="seller_product_seller_location_material",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="waste_types",
                to="api.sellerproductsellerlocationmaterial",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocationmaterial",
            name="seller_product_seller_location",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="material",
                to="api.sellerproductsellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocation",
            name="seller_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_product_seller_locations",
                to="api.sellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="sellerproductsellerlocation",
            name="seller_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_product_seller_locations",
                to="api.sellerproduct",
            ),
        ),
        migrations.AddField(
            model_name="sellerproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_products",
                to="api.product",
            ),
        ),
        migrations.AddField(
            model_name="sellerproduct",
            name="seller",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_products",
                to="api.seller",
            ),
        ),
        migrations.AddField(
            model_name="sellerlocationmailingaddress",
            name="seller_location",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mailing_address",
                to="api.sellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="sellerlocation",
            name="seller",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_locations",
                to="api.seller",
            ),
        ),
        migrations.AddField(
            model_name="sellerinvoicepayablelineitem",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seller_invoice_payable_line_items",
                to="api.order",
            ),
        ),
        migrations.AddField(
            model_name="sellerinvoicepayablelineitem",
            name="seller_invoice_payable",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.sellerinvoicepayable",
            ),
        ),
        migrations.AddField(
            model_name="sellerinvoicepayable",
            name="seller_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="api.sellerlocation"
            ),
        ),
        migrations.AddField(
            model_name="productaddonchoice",
            name="add_on_choice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.addonchoice"
            ),
        ),
        migrations.AddField(
            model_name="productaddonchoice",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_add_on_choices",
                to="api.product",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="api.mainproduct",
            ),
        ),
        migrations.AddField(
            model_name="payout",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payouts",
                to="api.order",
            ),
        ),
        migrations.AddField(
            model_name="orderlineitem",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="order_line_items",
                to="api.order",
            ),
        ),
        migrations.AddField(
            model_name="orderlineitem",
            name="order_line_item_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="api.orderlineitemtype"
            ),
        ),
        migrations.AddField(
            model_name="ordergroupservice",
            name="order_group",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="service",
                to="api.ordergroup",
            ),
        ),
        migrations.AddField(
            model_name="ordergrouprental",
            name="order_group",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rental",
                to="api.ordergroup",
            ),
        ),
        migrations.AddField(
            model_name="ordergroupmaterial",
            name="order_group",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="material",
                to="api.ordergroup",
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="preferred_service_days",
            field=models.ManyToManyField(blank=True, to="api.dayofweek"),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="seller_product_seller_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="api.sellerproductsellerlocation",
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="service_recurring_frequency",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.servicerecurringfrequency",
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="time_slot",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.timeslot",
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="user_address",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="order_groups",
                to="api.useraddress",
            ),
        ),
        migrations.AddField(
            model_name="ordergroup",
            name="waste_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.wastetype",
            ),
        ),
        migrations.AddField(
            model_name="orderdisposalticket",
            name="disposal_location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.disposallocation",
            ),
        ),
        migrations.AddField(
            model_name="orderdisposalticket",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="api.order"
            ),
        ),
        migrations.AddField(
            model_name="orderdisposalticket",
            name="waste_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="api.wastetype"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="disposal_location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="api.disposallocation",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="order_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders",
                to="api.ordergroup",
            ),
        ),
        migrations.AddField(
            model_name="mainproductwastetype",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.mainproduct"
            ),
        ),
        migrations.AddField(
            model_name="mainproductwastetype",
            name="waste_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.wastetype"
            ),
        ),
        migrations.AddField(
            model_name="mainproductservicerecurringfrequency",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="api.mainproduct"
            ),
        ),
        migrations.AddField(
            model_name="mainproductservicerecurringfrequency",
            name="service_recurring_frequency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="api.servicerecurringfrequency",
            ),
        ),
        migrations.AddField(
            model_name="mainproductinfo",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.mainproduct"
            ),
        ),
        migrations.AddField(
            model_name="mainproductcategoryinfo",
            name="main_product_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="api.mainproductcategory",
            ),
        ),
        migrations.AddField(
            model_name="mainproductaddon",
            name="add_on",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.addon"
            ),
        ),
        migrations.AddField(
            model_name="mainproductaddon",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.mainproduct"
            ),
        ),
        migrations.AddField(
            model_name="mainproduct",
            name="main_product_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="main_products",
                to="api.mainproductcategory",
            ),
        ),
        migrations.AddField(
            model_name="disposallocationwastetype",
            name="disposal_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.disposallocation"
            ),
        ),
        migrations.AddField(
            model_name="disposallocationwastetype",
            name="waste_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.wastetype"
            ),
        ),
        migrations.AddField(
            model_name="addonchoice",
            name="add_on",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.addon"
            ),
        ),
        migrations.AddField(
            model_name="addon",
            name="main_product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.mainproduct"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="api.usergroup",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="sellerproductsellerlocationservicerecurringfrequency",
            unique_together={
                (
                    "seller_product_seller_location_service",
                    "main_product_service_recurring_frequency",
                )
            },
        ),
        migrations.AlterUniqueTogether(
            name="sellerproductsellerlocationmaterialwastetype",
            unique_together={
                ("seller_product_seller_location_material", "main_product_waste_type")
            },
        ),
        migrations.AlterUniqueTogether(
            name="sellerproductsellerlocation",
            unique_together={("seller_product", "seller_location")},
        ),
        migrations.AlterUniqueTogether(
            name="sellerproduct",
            unique_together={("product", "seller")},
        ),
        migrations.AlterUniqueTogether(
            name="productaddonchoice",
            unique_together={("product", "add_on_choice")},
        ),
        migrations.AlterUniqueTogether(
            name="mainproductwastetype",
            unique_together={("waste_type", "main_product")},
        ),
    ]
