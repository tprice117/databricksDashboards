# Generated by Django 4.1 on 2024-04-27 21:34

import api.models.order.order_disposal_ticket
import api.models.seller.seller_invoice_payable
import api.models.seller.seller_location
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.CharField(blank=True, max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("BILLING", "Billing Manager"),
                            ("MEMBER", "Member"),
                        ],
                        default="ADMIN",
                        max_length=255,
                    ),
                ),
                (
                    "mailchip_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "intercom_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("phone", models.CharField(blank=True, max_length=40, null=True)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("photo_url", models.TextField(blank=True, null=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "device_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_admin", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                (
                    "salesforce_contact_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "salesforce_seller_location_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("terms_accepted", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AddOn",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("sort", models.DecimalField(decimal_places=0, max_digits=18)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AddOnChoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DayOfWeek",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("number", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DisposalLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                ("latitude", models.DecimalField(decimal_places=15, max_digits=18)),
                ("longitude", models.DecimalField(decimal_places=15, max_digits=18)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DisposalLocationWasteType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("price_per_ton", models.DecimalField(decimal_places=2, max_digits=18)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProduct",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("cubic_yards", models.IntegerField(blank=True, null=True)),
                ("ar_url", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("image_del", models.TextField(blank=True, null=True)),
                ("sort", models.IntegerField()),
                (
                    "included_tonnage_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "price_per_additional_ton",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "max_tonnage_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "max_rate",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "included_rate_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "main_product_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("has_service", models.BooleanField(default=False)),
                ("has_rental", models.BooleanField(default=False)),
                ("has_material", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductAddOn",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("description", models.TextField(blank=True, null=True)),
                ("image", models.TextField(blank=True, null=True)),
                ("icon", models.TextField(blank=True, null=True)),
                ("sort", models.IntegerField()),
                (
                    "main_product_category_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductCategoryInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("sort", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("sort", models.IntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductServiceRecurringFrequency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MainProductWasteType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("submitted_on", models.DateTimeField(blank=True, null=True)),
                ("schedule_details", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("APPROVAL", "Approval"),
                            ("PENDING", "Pending"),
                            ("SCHEDULED", "Scheduled"),
                            ("IN-PROGRESS", "In-Progress"),
                            ("Awaiting Request", "Awaiting Request"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETE", "Complete"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "billing_comments_internal_use",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "schedule_window",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Morning (7am-11am)", "Morning (7am-11am)"),
                            ("Afternoon (12pm-4pm)", "Afternoon (12pm-4pm)"),
                            ("Evening (5pm-8pm)", "Evening (5pm-8pm)"),
                        ],
                        max_length=35,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderDisposalTicket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.order.order_disposal_ticket.OrderDisposalTicket.get_file_path,
                    ),
                ),
                ("ticket_id", models.CharField(max_length=255)),
                ("weight", models.DecimalField(decimal_places=2, max_digits=18)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("access_details", models.TextField(blank=True, null=True)),
                ("placement_details", models.TextField(blank=True, null=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "take_rate",
                    models.DecimalField(decimal_places=2, default=30, max_digits=18),
                ),
                ("tonnage_quantity", models.IntegerField(blank=True, null=True)),
                (
                    "delivery_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "removal_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderGroupMaterial",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "price_per_ton",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                ("tonnage_included", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderGroupRental",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("included_days", models.IntegerField(default=0)),
                (
                    "price_per_day_included",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                (
                    "price_per_day_additional",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderGroupService",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "miles",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderLineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("rate", models.DecimalField(decimal_places=2, max_digits=18)),
                ("quantity", models.DecimalField(decimal_places=4, max_digits=18)),
                (
                    "platform_fee_percent",
                    models.DecimalField(
                        decimal_places=2,
                        default=20,
                        help_text="Enter as a percentage without the percent symbol (ex: 25.00)",
                        max_digits=18,
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_flat_rate", models.BooleanField(default=False)),
                (
                    "stripe_invoice_line_item_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("paid", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderLineItemType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("units", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=255)),
                ("stripe_tax_code_id", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Payout",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "checkbook_payout_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_transfer_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=18)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "removal_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductAddOnChoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="Seller",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("phone", models.CharField(max_length=40)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "order_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("order_phone", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Broker", "Broker"),
                            ("Compost facility", "Compost facility"),
                            ("Delivery", "Delivery"),
                            ("Equipment", "Equipment"),
                            ("Fencing", "Fencing"),
                            ("Industrial", "Industrial"),
                            ("Junk", "Junk"),
                            ("Landfill", "Landfill"),
                            ("Mover", "Mover"),
                            ("MRF", "MRF"),
                            ("Other recycler", "Other recycler"),
                            ("Paint recycler", "Paint recycler"),
                            ("Portable Storage", "Portable Storage"),
                            ("Portable Toilet", "Portable Toilet"),
                            ("Processor", "Processor"),
                            ("Roll-off", "Roll-off"),
                            ("Scrap yard", "Scrap yard"),
                            ("Tires", "Tires"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Services", "Services"),
                            ("Disposal site", "Disposal site"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Inactive", "Inactive"),
                            ("Inactive - Onboarding", "Inactive - Onboarding"),
                            (
                                "Inactive - Pending approval",
                                "Inactive - Pending approval",
                            ),
                            ("Active - under review", "Active - under review"),
                            ("Active", "Active"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("lead_time", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "type_display",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Landfill", "Landfill"),
                            ("MRF", "MRF"),
                            ("Industrial", "Industrial"),
                            ("Scrap yard", "Scrap yard"),
                            ("Compost facility", "Compost facility"),
                            ("Processor", "Processor"),
                            ("Paint recycler", "Paint recycler"),
                            ("Tires", "Tires"),
                            ("Other recycler", "Other recycler"),
                            ("Roll-off", "Roll-off"),
                            ("Mover", "Mover"),
                            ("Junk", "Junk"),
                            ("Delivery", "Delivery"),
                            ("Broker", "Broker"),
                            ("Equipment", "Equipment"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "stripe_connect_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "marketplace_display_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "open_days",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("MONDAY", "MONDAY"),
                            ("TUESDAY", "TUESDAY"),
                            ("WEDNESDAY", "WEDNESDAY"),
                            ("THURSDAY", "THURSDAY"),
                            ("FRIDAY", "FRIDAY"),
                            ("SATURDAY", "SATURDAY"),
                            ("SUNDAY", "SUNDAY"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("open_time", models.TimeField(blank=True, null=True)),
                ("close_time", models.TimeField(blank=True, null=True)),
                (
                    "lead_time_hrs",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                ("announcement", models.TextField(blank=True, null=True)),
                ("live_menu_is_active", models.BooleanField(default=False)),
                ("location_logo_url", models.URLField(blank=True, null=True)),
                (
                    "downstream_insurance_requirements_met",
                    models.BooleanField(default=False),
                ),
                (
                    "badge",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("New", "New"),
                            ("Pro", "Pro"),
                            ("Platinum", "Platinum"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "salesforce_seller_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("about_us", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerInvoicePayable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "invoice_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.seller.seller_invoice_payable.SellerInvoicePayable.get_file_path,
                    ),
                ),
                ("supplier_invoice_id", models.CharField(max_length=255)),
                ("invoice_date", models.DateField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=18)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("UNPAID", "Unpaid"),
                            ("ESCALATED", "Escalated"),
                            ("ERROR", "Error"),
                            ("READY_FOR_PAYOUT", "Ready for Payout"),
                            ("PAID", "Paid"),
                        ],
                        default="UNPAID",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerInvoicePayableLineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=18)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("street", models.TextField(blank=True, null=True)),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "stripe_connect_account_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("sends_invoices", models.BooleanField(default=False)),
                ("payee_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "order_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("order_phone", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "gl_coi",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.seller.seller_location.SellerLocation.get_file_path,
                    ),
                ),
                ("gl_coi_expiration_date", models.DateField(blank=True, null=True)),
                (
                    "gl_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "auto_coi",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.seller.seller_location.SellerLocation.get_file_path,
                    ),
                ),
                ("auto_coi_expiration_date", models.DateField(blank=True, null=True)),
                (
                    "auto_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "workers_comp_coi",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.seller.seller_location.SellerLocation.get_file_path,
                    ),
                ),
                (
                    "workers_comp_coi_expiration_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "workers_comp_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "w9",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=api.models.seller.seller_location.SellerLocation.get_file_path,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerLocationMailingAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("street", models.TextField()),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerProduct",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                (
                    "total_inventory",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "min_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "max_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "service_radius",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=18, null=True
                    ),
                ),
                (
                    "delivery_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "removal_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "fuel_environmental_markup",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocationMaterial",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocationMaterialWasteType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "price_per_ton",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                ("tonnage_included", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocationRental",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("included_days", models.IntegerField(default=0)),
                (
                    "price_per_day_included",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
                (
                    "price_per_day_additional",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocationService",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "price_per_mile",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "flat_rate_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SellerProductSellerLocationServiceRecurringFrequency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=18),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceRecurringFrequency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("length", models.IntegerField()),
                ("subscription_number", models.CharField(max_length=255)),
                ("interval_days", models.IntegerField(blank=True, null=True)),
                ("length_days", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
                ("start", models.TimeField()),
                ("end", models.TimeField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=255, unique=True),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("project_id", models.CharField(blank=True, max_length=50, null=True)),
                ("street", models.TextField(blank=True, null=True)),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                ("access_details", models.TextField(blank=True, null=True)),
                ("autopay", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                (
                    "child_account_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserAddressType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("pay_later", models.BooleanField(default=False)),
                ("autopay", models.BooleanField(default=False)),
                (
                    "net_terms",
                    models.IntegerField(
                        choices=[
                            (0, "Immediately"),
                            (14, "Net 14"),
                            (30, "Net 30"),
                            (45, "Net 45"),
                            (60, "Net 60"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "invoice_frequency",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Immediately"),
                            (7, "Weekly"),
                            (14, "Bi-Weekly"),
                            (30, "Monthly"),
                        ],
                        default=0,
                        null=True,
                    ),
                ),
                ("invoice_day_of_month", models.IntegerField(blank=True, null=True)),
                (
                    "invoice_at_project_completion",
                    models.BooleanField(
                        default=False,
                        help_text="Send invoices when all OrderGroups in a project are completed.",
                    ),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                ("share_code", models.CharField(blank=True, max_length=6)),
                (
                    "parent_account_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "credit_line_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "compliance_status",
                    models.CharField(
                        choices=[
                            ("NOT_REQUIRED", "Not Required"),
                            ("REQUESTED", "Requested"),
                            ("IN-PROGRESS", "In-Progress"),
                            ("NEEDS_REVIEW", "Needs Review"),
                            ("APPROVED", "Approved"),
                        ],
                        default="NOT_REQUIRED",
                        max_length=20,
                    ),
                ),
                (
                    "tax_exempt_status",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("exempt", "Exempt"),
                            ("reverse", "Reverse"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "intercom_id",
                    models.CharField(
                        blank=True,
                        help_text="This is the company_id in Intercom.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "seller",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.seller",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WasteType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=80)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserUserAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.useraddress",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSellerReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("rating", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="user_seller_review",
                        to="api.seller",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="user_seller_review",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSellerLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "seller_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.sellerlocation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupUser",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.usergroup"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupLegal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                (
                    "doing_business_as",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "structure",
                    models.CharField(
                        choices=[
                            ("sole_proprietorship", "Sole Proprietorship"),
                            ("llc", "Llc"),
                            ("s_corp", "S Corp"),
                            ("c_corp", "C Corp"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        choices=[
                            ("property_management", "Property Management"),
                            ("construction", "Construction"),
                            ("manufacturing", "Manufacturing"),
                            ("waste_collection", "Waste Collection"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("street", models.TextField()),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "user_group",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="legal",
                        to="api.usergroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupCreditApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "requested_credit_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("DECLINED", "Declined"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_applications",
                        to="api.usergroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupBilling",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("email", models.EmailField(max_length=254)),
                ("tax_id", models.CharField(blank=True, max_length=255, null=True)),
                ("street", models.TextField()),
                ("city", models.CharField(max_length=40)),
                ("state", models.CharField(max_length=80)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=80)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, max_digits=18),
                ),
                (
                    "user_group",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing",
                        to="api.usergroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
