openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /add_user/:
    post:
      operationId: add_user_create
      tags:
      - add_user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/add-on-choices/:
    get:
      operationId: api_add_on_choices_list
      parameters:
      - in: query
        name: add_on
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddOnChoice'
          description: ''
    post:
      operationId: api_add_on_choices_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
  /api/add-on-choices/{id}/:
    get:
      operationId: api_add_on_choices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    put:
      operationId: api_add_on_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    patch:
      operationId: api_add_on_choices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    delete:
      operationId: api_add_on_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/add-ons/:
    get:
      operationId: api_add_ons_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddOn'
          description: ''
    post:
      operationId: api_add_ons_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
  /api/add-ons/{id}/:
    get:
      operationId: api_add_ons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    put:
      operationId: api_add_ons_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    patch:
      operationId: api_add_ons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    delete:
      operationId: api_add_ons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/customer-portal/{customer_id}/:
    get:
      operationId: api_customer_portal_retrieve
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/disposal-location-waste-types/:
    get:
      operationId: api_disposal_location_waste_types_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    post:
      operationId: api_disposal_location_waste_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
  /api/disposal-location-waste-types/{id}/:
    get:
      operationId: api_disposal_location_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    put:
      operationId: api_disposal_location_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    patch:
      operationId: api_disposal_location_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    delete:
      operationId: api_disposal_location_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/disposal-locations/:
    get:
      operationId: api_disposal_locations_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisposalLocation'
          description: ''
    post:
      operationId: api_disposal_locations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
  /api/disposal-locations/{id}/:
    get:
      operationId: api_disposal_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    put:
      operationId: api_disposal_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    patch:
      operationId: api_disposal_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    delete:
      operationId: api_disposal_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/exports/denver-compliance/:
    post:
      operationId: api_exports_denver_compliance_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/main-product-add-ons/:
    get:
      operationId: api_main_product_add_ons_list
      parameters:
      - in: query
        name: add_on
        schema:
          type: string
          format: uuid
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    post:
      operationId: api_main_product_add_ons_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
  /api/main-product-add-ons/{id}/:
    get:
      operationId: api_main_product_add_ons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    put:
      operationId: api_main_product_add_ons_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    patch:
      operationId: api_main_product_add_ons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    delete:
      operationId: api_main_product_add_ons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/main-product-categories/:
    get:
      operationId: api_main_product_categories_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductCategory'
          description: ''
    post:
      operationId: api_main_product_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
  /api/main-product-categories/{id}/:
    get:
      operationId: api_main_product_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    put:
      operationId: api_main_product_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    patch:
      operationId: api_main_product_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    delete:
      operationId: api_main_product_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/main-product-category-infos/:
    get:
      operationId: api_main_product_category_infos_list
      parameters:
      - in: query
        name: main_product_category
        schema:
          type: string
          format: uuid
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    post:
      operationId: api_main_product_category_infos_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
  /api/main-product-category-infos/{id}/:
    get:
      operationId: api_main_product_category_infos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    put:
      operationId: api_main_product_category_infos_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    patch:
      operationId: api_main_product_category_infos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    delete:
      operationId: api_main_product_category_infos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/main-product-infos/:
    get:
      operationId: api_main_product_infos_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductInfo'
          description: ''
    post:
      operationId: api_main_product_infos_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
  /api/main-product-infos/{id}/:
    get:
      operationId: api_main_product_infos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    put:
      operationId: api_main_product_infos_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    patch:
      operationId: api_main_product_infos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    delete:
      operationId: api_main_product_infos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/main-product-seller-product-seller-location-service-recurring-frequencies/:
    get:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    post:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          description: ''
  /api/main-product-seller-product-seller-location-service-recurring-frequencies/{id}/:
    get:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product seller product seller
          location service recurring frequency.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    put:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product seller product seller
          location service recurring frequency.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    patch:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product seller product seller
          location service recurring frequency.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductSellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductSellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductSellerProductSellerLocationServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductSellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    delete:
      operationId: api_main_product_seller_product_seller_location_service_recurring_frequencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product seller product seller
          location service recurring frequency.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/main-product-waste-types/:
    get:
      operationId: api_main_product_waste_types_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    post:
      operationId: api_main_product_waste_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
  /api/main-product-waste-types/{id}/:
    get:
      operationId: api_main_product_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    put:
      operationId: api_main_product_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    patch:
      operationId: api_main_product_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    delete:
      operationId: api_main_product_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/main-products/:
    get:
      operationId: api_main_products_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: main_product_category
        schema:
          type: string
          format: uuid
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProduct'
          description: ''
    post:
      operationId: api_main_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProduct'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
  /api/main-products/{id}/:
    get:
      operationId: api_main_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    put:
      operationId: api_main_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProduct'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    patch:
      operationId: api_main_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    delete:
      operationId: api_main_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/order-disposal-tickets/:
    get:
      operationId: api_order_disposal_tickets_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    post:
      operationId: api_order_disposal_tickets_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
  /api/order-disposal-tickets/{id}/:
    get:
      operationId: api_order_disposal_tickets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    put:
      operationId: api_order_disposal_tickets_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    patch:
      operationId: api_order_disposal_tickets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    delete:
      operationId: api_order_disposal_tickets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order-groups/:
    get:
      operationId: api_order_groups_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user_address
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderGroup'
          description: ''
    post:
      operationId: api_order_groups_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
  /api/order-groups/{id}/:
    get:
      operationId: api_order_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    put:
      operationId: api_order_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    patch:
      operationId: api_order_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    delete:
      operationId: api_order_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order/pricing/{order_id}/:
    get:
      operationId: api_order_pricing_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: order_group
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/payment-intents/:
    get:
      operationId: api_payment_intents_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/payment-methods/:
    get:
      operationId: api_payment_methods_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/prediction:
    post:
      operationId: api_prediction_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/pricing/:
    post:
      operationId: api_pricing_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/product-add-on-choices/:
    get:
      operationId: api_product_add_on_choices_list
      parameters:
      - in: query
        name: add_on_choice
        schema:
          type: string
          format: uuid
      - in: query
        name: product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    post:
      operationId: api_product_add_on_choices_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
  /api/product-add-on-choices/{id}/:
    get:
      operationId: api_product_add_on_choices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    put:
      operationId: api_product_add_on_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    patch:
      operationId: api_product_add_on_choices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    delete:
      operationId: api_product_add_on_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/seller-locations/:
    get:
      operationId: api_seller_locations_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerLocation'
          description: ''
    post:
      operationId: api_seller_locations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
  /api/seller-locations/{id}/:
    get:
      operationId: api_seller_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    put:
      operationId: api_seller_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    patch:
      operationId: api_seller_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    delete:
      operationId: api_seller_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-material-waste-types/:
    get:
      operationId: api_seller_product_seller_location_material_waste_types_list
      parameters:
      - in: query
        name: main_product_waste_type
        schema:
          type: string
          format: uuid
      - in: query
        name: seller_product_seller_location_material
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    post:
      operationId: api_seller_product_seller_location_material_waste_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
  /api/seller-product-seller-location-material-waste-types/{id}/:
    get:
      operationId: api_seller_product_seller_location_material_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    put:
      operationId: api_seller_product_seller_location_material_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_material_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_material_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-materials/:
    get:
      operationId: api_seller_product_seller_location_materials_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    post:
      operationId: api_seller_product_seller_location_materials_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
  /api/seller-product-seller-location-materials/{id}/:
    get:
      operationId: api_seller_product_seller_location_materials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    put:
      operationId: api_seller_product_seller_location_materials_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_materials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_materials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-rentals/:
    get:
      operationId: api_seller_product_seller_location_rentals_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    post:
      operationId: api_seller_product_seller_location_rentals_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
  /api/seller-product-seller-location-rentals/{id}/:
    get:
      operationId: api_seller_product_seller_location_rentals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    put:
      operationId: api_seller_product_seller_location_rentals_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_rentals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_rentals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-service-recurring-frequencies/:
    get:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    post:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
  /api/seller-product-seller-location-service-recurring-frequencies/{id}/:
    get:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    put:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_service_recurring_frequencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-service-recurrings/:
    get:
      operationId: api_seller_product_seller_location_service_recurrings_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          description: ''
    post:
      operationId: api_seller_product_seller_location_service_recurrings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          description: ''
  /api/seller-product-seller-location-service-recurrings/{id}/:
    get:
      operationId: api_seller_product_seller_location_service_recurrings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          description: ''
    put:
      operationId: api_seller_product_seller_location_service_recurrings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_service_recurrings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurring'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurring'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurring'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurring'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_service_recurrings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-services/:
    get:
      operationId: api_seller_product_seller_location_services_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    post:
      operationId: api_seller_product_seller_location_services_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
  /api/seller-product-seller-location-services/{id}/:
    get:
      operationId: api_seller_product_seller_location_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    put:
      operationId: api_seller_product_seller_location_services_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    patch:
      operationId: api_seller_product_seller_location_services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    delete:
      operationId: api_seller_product_seller_location_services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-locations/:
    get:
      operationId: api_seller_product_seller_locations_list
      parameters:
      - in: query
        name: seller_location
        schema:
          type: string
          format: uuid
      - in: query
        name: seller_product
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    post:
      operationId: api_seller_product_seller_locations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
  /api/seller-product-seller-locations/{id}/:
    get:
      operationId: api_seller_product_seller_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    put:
      operationId: api_seller_product_seller_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    patch:
      operationId: api_seller_product_seller_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    delete:
      operationId: api_seller_product_seller_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-products/:
    get:
      operationId: api_seller_products_list
      parameters:
      - in: query
        name: product
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProduct'
          description: ''
    post:
      operationId: api_seller_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
  /api/seller-products/{id}/:
    get:
      operationId: api_seller_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    put:
      operationId: api_seller_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    patch:
      operationId: api_seller_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    delete:
      operationId: api_seller_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sellers/:
    get:
      operationId: api_sellers_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: array
          items:
            type: string
            format: uuid
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seller'
          description: ''
    post:
      operationId: api_sellers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
  /api/sellers/{id}/:
    get:
      operationId: api_sellers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    put:
      operationId: api_sellers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    patch:
      operationId: api_sellers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    delete:
      operationId: api_sellers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/service-requests/{id}/payout:
    get:
      operationId: api_service_requests_payout_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/sessions:
    get:
      operationId: api_sessions_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/setup-intents/:
    get:
      operationId: api_setup_intents_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/billing/invoices:
    get:
      operationId: api_stripe_billing_invoices_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/billing/subscriptions:
    get:
      operationId: api_stripe_billing_subscriptions_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/connect/accounts:
    get:
      operationId: api_stripe_connect_accounts_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/connect/transfers:
    get:
      operationId: api_stripe_connect_transfers_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/balance:
    get:
      operationId: api_stripe_core_balance_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/balance-transactions:
    get:
      operationId: api_stripe_core_balance_transactions_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/payment-intents:
    get:
      operationId: api_stripe_core_payment_intents_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/subscriptions/:
    get:
      operationId: api_subscriptions_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
    post:
      operationId: api_subscriptions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/subscriptions/{id}/:
    get:
      operationId: api_subscriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    put:
      operationId: api_subscriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: api_subscriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    delete:
      operationId: api_subscriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-address-types/:
    get:
      operationId: api_user_address_types_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddressType'
          description: ''
    post:
      operationId: api_user_address_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddressType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
  /api/user-address-types/{id}/:
    get:
      operationId: api_user_address_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    put:
      operationId: api_user_address_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddressType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    patch:
      operationId: api_user_address_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    delete:
      operationId: api_user_address_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-addresses/:
    get:
      operationId: api_user_addresses_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddress'
          description: ''
    post:
      operationId: api_user_addresses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/user-addresses/{id}/:
    get:
      operationId: api_user_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: api_user_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: api_user_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: api_user_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-groups/:
    get:
      operationId: api_user_groups_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
          description: ''
    post:
      operationId: api_user_groups_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/user-groups/{id}/:
    get:
      operationId: api_user_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    put:
      operationId: api_user_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    patch:
      operationId: api_user_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    delete:
      operationId: api_user_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-seller-review-aggregates/:
    get:
      operationId: api_user_seller_review_aggregates_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    post:
      operationId: api_user_seller_review_aggregates_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
  /api/user-seller-review-aggregates/{id}/:
    get:
      operationId: api_user_seller_review_aggregates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    put:
      operationId: api_user_seller_review_aggregates_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    patch:
      operationId: api_user_seller_review_aggregates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    delete:
      operationId: api_user_seller_review_aggregates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-seller-reviews/:
    get:
      operationId: api_user_seller_reviews_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSellerReview'
          description: ''
    post:
      operationId: api_user_seller_reviews_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
  /api/user-seller-reviews/{id}/:
    get:
      operationId: api_user_seller_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    put:
      operationId: api_user_seller_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    patch:
      operationId: api_user_seller_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    delete:
      operationId: api_user_seller_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-user-addresses/:
    get:
      operationId: api_user_user_addresses_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      - in: query
        name: user_address
        schema:
          type: string
          format: uuid
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserUserAddress'
          description: ''
    post:
      operationId: api_user_user_addresses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
  /api/user-user-addresses/{id}/:
    get:
      operationId: api_user_user_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    put:
      operationId: api_user_user_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    patch:
      operationId: api_user_user_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    delete:
      operationId: api_user_user_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user_id
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/waste-types/:
    get:
      operationId: api_waste_types_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WasteType'
          description: ''
    post:
      operationId: api_waste_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
  /api/waste-types/{id}/:
    get:
      operationId: api_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    put:
      operationId: api_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    patch:
      operationId: api_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    delete:
      operationId: api_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AddOn:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - name
      - sort
      - updated_on
    AddOnChoice:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        add_on:
          type: string
          format: uuid
      required:
      - add_on
      - created_on
      - name
      - updated_on
    BadgeEnum:
      enum:
      - New
      - Pro
      - Platinum
      type: string
    BlankEnum:
      enum:
      - ''
    DisposalLocation:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
      required:
      - city
      - country
      - created_on
      - latitude
      - longitude
      - name
      - postal_code
      - state
      - street
      - updated_on
    DisposalLocationWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
        disposal_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
      required:
      - created_on
      - disposal_location
      - price_per_ton
      - updated_on
      - waste_type
    InvoiceStatusEnum:
      enum:
      - Not yet invoiced
      - In draft
      - Sent to customer
      - Paid
      type: string
    LocationTypeEnum:
      enum:
      - Services
      - Disposal site
      type: string
    MainProduct:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        cubic_yards:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        ar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        image_del:
          type: string
          nullable: true
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        included_tonnage_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        price_per_additional_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        max_tonnage_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        max_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        included_rate_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        main_product_code:
          type: string
          nullable: true
          maxLength: 255
        main_product_category:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_category
      - name
      - sort
      - updated_on
    MainProductAddOn:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        add_on:
          type: string
          format: uuid
      required:
      - add_on
      - created_on
      - main_product
      - updated_on
    MainProductCategory:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        main_product_category_code:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created_on
      - name
      - sort
      - updated_on
    MainProductCategoryInfo:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_category
      - name
      - sort
      - updated_on
    MainProductInfo:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - name
      - sort
      - updated_on
    MainProductSellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        seller_product_seller_location_service_recurring_frequency:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - seller_product_seller_location_service_recurring_frequency
      - updated_on
    MainProductWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        waste_type:
          type: string
          format: uuid
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - updated_on
      - waste_type
    NullEnum:
      enum:
      - null
    OpenDaysEnum:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    Order:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        service_date:
          type: string
          format: date
          nullable: true
        submitted_on:
          type: string
          format: date-time
          nullable: true
        stripe_invoice_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_order_id:
          type: string
          nullable: true
          maxLength: 255
        schedule_details:
          type: string
          nullable: true
        access_details:
          type: string
          nullable: true
        placement_details:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        order_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        included_weight_tons:
          type: string
          format: decimal
          pattern: ^-?\d{0,14}(?:\.\d{0,4})?$
          nullable: true
        invoice_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        billing_comments_internal_use:
          type: string
          nullable: true
        schedule_window:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ScheduleWindowEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        supplier_payout_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SupplierPayoutStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        suppplier_payout_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SuppplierPayoutMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        payout_processing_error_comment:
          type: string
          nullable: true
        order_group:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - order_group
      - updated_on
    OrderDisposalTicket:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        ticket_id:
          type: string
          maxLength: 255
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
        order:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
      required:
      - created_on
      - disposal_location
      - order
      - ticket_id
      - updated_on
      - waste_type
      - weight
    OrderGroup:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
        seller_product_seller_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
          nullable: true
        subscription:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - seller_product_seller_location
      - updated_on
      - user
      - user_address
    OrderStatusEnum:
      enum:
      - PENDING
      - SCHEDULED
      - IN-PROGRESS
      - Awaiting Request
      - CANCELLED
      - COMPLETE
      type: string
    OrderTypeEnum:
      enum:
      - Automatic Renewal
      - Swap
      - Empty and Return
      - Trip Charge/Dry Run
      - Removal
      - On Demand
      - Other
      type: string
    PatchedAddOn:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        main_product:
          type: string
          format: uuid
    PatchedAddOnChoice:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        add_on:
          type: string
          format: uuid
    PatchedDisposalLocation:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
    PatchedDisposalLocationWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
        disposal_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
    PatchedMainProduct:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        cubic_yards:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        ar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        image_del:
          type: string
          nullable: true
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        included_tonnage_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        price_per_additional_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        max_tonnage_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        max_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        included_rate_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        main_product_code:
          type: string
          nullable: true
          maxLength: 255
        main_product_category:
          type: string
          format: uuid
    PatchedMainProductAddOn:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        add_on:
          type: string
          format: uuid
    PatchedMainProductCategory:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        sort:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        main_product_category_code:
          type: string
          nullable: true
          maxLength: 255
    PatchedMainProductCategoryInfo:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category:
          type: string
          format: uuid
    PatchedMainProductInfo:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product:
          type: string
          format: uuid
    PatchedMainProductSellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        seller_product_seller_location_service_recurring_frequency:
          type: string
          format: uuid
    PatchedMainProductWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        waste_type:
          type: string
          format: uuid
        main_product:
          type: string
          format: uuid
    PatchedOrder:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        service_date:
          type: string
          format: date
          nullable: true
        submitted_on:
          type: string
          format: date-time
          nullable: true
        stripe_invoice_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_order_id:
          type: string
          nullable: true
          maxLength: 255
        schedule_details:
          type: string
          nullable: true
        access_details:
          type: string
          nullable: true
        placement_details:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        order_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        included_weight_tons:
          type: string
          format: decimal
          pattern: ^-?\d{0,14}(?:\.\d{0,4})?$
          nullable: true
        invoice_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        billing_comments_internal_use:
          type: string
          nullable: true
        schedule_window:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ScheduleWindowEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        supplier_payout_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SupplierPayoutStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        suppplier_payout_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SuppplierPayoutMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        tax_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        payout_processing_error_comment:
          type: string
          nullable: true
        order_group:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
    PatchedOrderDisposalTicket:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        ticket_id:
          type: string
          maxLength: 255
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
        order:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
    PatchedOrderGroup:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
        seller_product_seller_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
          nullable: true
        subscription:
          type: string
          format: uuid
          nullable: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product_code:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        removal_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        main_product:
          type: string
          format: uuid
    PatchedProductAddOnChoice:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        product:
          type: string
          format: uuid
        add_on_choice:
          type: string
          format: uuid
    PatchedSeller:
      type: object
      properties:
        id:
          type: string
        has_listings:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 40
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        location_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SellerStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        lead_time:
          type: string
          nullable: true
          maxLength: 255
        type_display:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeDisplayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        stripe_connect_id:
          type: string
          nullable: true
          maxLength: 255
        marketplace_display_name:
          type: string
          nullable: true
          maxLength: 255
        open_days:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OpenDaysEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        open_time:
          type: string
          format: time
          nullable: true
        close_time:
          type: string
          format: time
          nullable: true
        lead_time_hrs:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        announcement:
          type: string
          nullable: true
        live_menu_is_active:
          type: boolean
        location_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        downstream_insurance_requirements_met:
          type: boolean
        badge:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BadgeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        salesforce_seller_id:
          type: string
          nullable: true
          maxLength: 255
        about_us:
          type: string
          nullable: true
    PatchedSellerLocation:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        seller:
          type: string
          format: uuid
    PatchedSellerProduct:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product:
          type: string
          format: uuid
          nullable: true
        seller:
          type: string
          format: uuid
          nullable: true
    PatchedSellerProductSellerLocation:
      type: object
      properties:
        id:
          type: string
        available_quantity:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        total_inventory:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        service_radius:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        delivery_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        removal_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        fuel_environmental_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product:
          type: string
          format: uuid
          nullable: true
        seller_location:
          type: string
          format: uuid
          nullable: true
    PatchedSellerProductSellerLocationMaterial:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        tonnage_included:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationMaterialWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location_material:
          type: string
          format: uuid
        main_product_waste_type:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationRental:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        included_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price_per_day_included:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        price_per_day_additional:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationService:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_mile:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        flat_rate_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationServiceRecurring:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location_service:
          type: string
          format: uuid
        main_product_seller_product_seller_location_service_recurring_frequency:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
    PatchedSubscription:
      type: object
      properties:
        id:
          type: string
        order_number:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        subscription_number:
          type: string
          maxLength: 255
        interval_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        length_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        subscription_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SubscriptionTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedUser:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user_id:
          type: string
          maxLength: 255
        mailchip_id:
          type: string
          nullable: true
          maxLength: 255
        intercom_id:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 40
        email:
          type: string
          maxLength: 255
        photo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        device_token:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
        is_archived:
          type: boolean
        salesforce_contact_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_seller_location_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        seller:
          type: string
          format: uuid
          nullable: true
    PatchedUserAddress:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        project_id:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        autopay:
          type: boolean
        is_archived:
          type: boolean
        child_account_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        user_address_type:
          type: string
          format: uuid
          nullable: true
    PatchedUserAddressType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
    PatchedUserGroup:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        pay_later:
          type: boolean
        autopay:
          type: boolean
        parent_account_id:
          type: string
          nullable: true
          maxLength: 255
    PatchedUserSellerReview:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        comment:
          type: string
          nullable: true
        seller:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
    PatchedUserSellerReviewAggregate:
      type: object
      properties:
        seller_name:
          type: string
        rating_avg:
          type: number
          format: double
        review_count:
          type: integer
    PatchedUserUserAddress:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
    PatchedWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
    Product:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product_code:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        removal_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - updated_on
    ProductAddOnChoice:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        product:
          type: string
          format: uuid
        add_on_choice:
          type: string
          format: uuid
      required:
      - add_on_choice
      - created_on
      - name
      - product
      - updated_on
    ScheduleWindowEnum:
      enum:
      - Morning (7am-11am)
      - Afternoon (12pm-4pm)
      - Evening (5pm-8pm)
      type: string
    Seller:
      type: object
      properties:
        id:
          type: string
        has_listings:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 40
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        location_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SellerStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        lead_time:
          type: string
          nullable: true
          maxLength: 255
        type_display:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeDisplayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        stripe_connect_id:
          type: string
          nullable: true
          maxLength: 255
        marketplace_display_name:
          type: string
          nullable: true
          maxLength: 255
        open_days:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OpenDaysEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        open_time:
          type: string
          format: time
          nullable: true
        close_time:
          type: string
          format: time
          nullable: true
        lead_time_hrs:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
        announcement:
          type: string
          nullable: true
        live_menu_is_active:
          type: boolean
        location_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        downstream_insurance_requirements_met:
          type: boolean
        badge:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BadgeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        salesforce_seller_id:
          type: string
          nullable: true
          maxLength: 255
        about_us:
          type: string
          nullable: true
      required:
      - created_on
      - has_listings
      - lead_time_hrs
      - name
      - phone
      - updated_on
    SellerLocation:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        seller:
          type: string
          format: uuid
      required:
      - city
      - country
      - created_on
      - latitude
      - longitude
      - name
      - postal_code
      - seller
      - state
      - updated_on
    SellerProduct:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product:
          type: string
          format: uuid
          nullable: true
        seller:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - updated_on
    SellerProductSellerLocation:
      type: object
      properties:
        id:
          type: string
        available_quantity:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        total_inventory:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        service_radius:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,0})?$
          nullable: true
        delivery_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        removal_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        fuel_environmental_markup:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product:
          type: string
          format: uuid
          nullable: true
        seller_location:
          type: string
          format: uuid
          nullable: true
      required:
      - available_quantity
      - created_on
      - updated_on
    SellerProductSellerLocationMaterial:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        tonnage_included:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - seller_product_seller_location
      - tonnage_included
      - updated_on
    SellerProductSellerLocationMaterialWasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location_material:
          type: string
          format: uuid
        main_product_waste_type:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_waste_type
      - seller_product_seller_location_material
      - updated_on
    SellerProductSellerLocationRental:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        included_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price_per_day_included:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        price_per_day_additional:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - included_days
      - seller_product_seller_location
      - updated_on
    SellerProductSellerLocationService:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_mile:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        flat_rate_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - seller_product_seller_location
      - updated_on
    SellerProductSellerLocationServiceRecurring:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
        seller_product_seller_location_service:
          type: string
          format: uuid
        main_product_seller_product_seller_location_service_recurring_frequency:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_seller_product_seller_location_service_recurring_frequency
      - seller_product_seller_location_service
      - updated_on
    SellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,2})?$
          nullable: true
      required:
      - created_on
      - updated_on
    SellerStatusEnum:
      enum:
      - Inactive
      - Inactive - Onboarding
      - Inactive - Pending approval
      - Active - under review
      - Active
      type: string
    Subscription:
      type: object
      properties:
        id:
          type: string
        order_number:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        subscription_number:
          type: string
          maxLength: 255
        interval_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        length_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        subscription_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SubscriptionTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - created_on
      - subscription_number
      - updated_on
    SubscriptionTypeEnum:
      enum:
      - On demand without subscription
      - On demand with subscription
      - Auto scheduled with subscription
      type: string
    SupplierPayoutStatusEnum:
      enum:
      - Not yet paid
      - Process Payment
      - Payout Processing Error
      - Payout Completed
      type: string
    SuppplierPayoutMethodEnum:
      enum:
      - Stripe Connect
      - By Invoice
      - Other
      type: string
    TypeDisplayEnum:
      enum:
      - Landfill
      - MRF
      - Industrial
      - Scrap yard
      - Compost facility
      - Processor
      - Paint recycler
      - Tires
      - Other recycler
      - Roll-off
      - Mover
      - Junk
      - Delivery
      - Broker
      - Equipment
      type: string
    TypeEnum:
      enum:
      - Broker
      - Compost facility
      - Delivery
      - Equipment
      - Fencing
      - Industrial
      - Junk
      - Landfill
      - Mover
      - MRF
      - Other recycler
      - Paint recycler
      - Portable Storage
      - Portable Toilet
      - Processor
      - Roll-off
      - Scrap yard
      - Tires
      type: string
    User:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user_id:
          type: string
          maxLength: 255
        mailchip_id:
          type: string
          nullable: true
          maxLength: 255
        intercom_id:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 40
        email:
          type: string
          maxLength: 255
        photo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        device_token:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
        is_archived:
          type: boolean
        salesforce_contact_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_seller_location_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        seller:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - email
      - updated_on
    UserAddress:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          maxLength: 255
        project_id:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,15})?$
        autopay:
          type: boolean
        is_archived:
          type: boolean
        child_account_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        user_address_type:
          type: string
          format: uuid
          nullable: true
      required:
      - city
      - country
      - created_on
      - name
      - postal_code
      - state
      - updated_on
    UserAddressType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
      required:
      - created_on
      - name
      - updated_on
    UserGroup:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        stripe_customer_id:
          type: string
          nullable: true
          maxLength: 255
        pay_later:
          type: boolean
        autopay:
          type: boolean
        parent_account_id:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created_on
      - name
      - updated_on
    UserSellerReview:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        comment:
          type: string
          nullable: true
        seller:
          type: string
          format: uuid
        user:
          type: string
          format: uuid
      required:
      - created_on
      - seller
      - updated_on
      - user
    UserSellerReviewAggregate:
      type: object
      properties:
        seller_name:
          type: string
        rating_avg:
          type: number
          format: double
        review_count:
          type: integer
      required:
      - rating_avg
      - review_count
      - seller_name
    UserUserAddress:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
      required:
      - created_on
      - updated_on
      - user
      - user_address
    WasteType:
      type: object
      properties:
        id:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
      required:
      - created_on
      - name
      - updated_on
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
