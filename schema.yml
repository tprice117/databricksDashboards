openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/add-on-choices/:
    get:
      operationId: add_on_choices_list
      parameters:
      - in: query
        name: add_on
        schema:
          type: string
          format: uuid
      - in: query
        name: add_on__main_product
        schema:
          type: string
          format: uuid
      tags:
      - add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddOnChoice'
          description: ''
    post:
      operationId: add_on_choices_create
      tags:
      - add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
  /api/add-on-choices/{id}/:
    get:
      operationId: add_on_choices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    put:
      operationId: add_on_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    patch:
      operationId: add_on_choices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddOnChoice'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnChoice'
          description: ''
    delete:
      operationId: add_on_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on choice.
        required: true
      tags:
      - add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/add-ons/:
    get:
      operationId: add_ons_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - add-ons
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddOn'
          description: ''
    post:
      operationId: add_ons_create
      tags:
      - add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOn'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
  /api/add-ons/{id}/:
    get:
      operationId: add_ons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - add-ons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    put:
      operationId: add_ons_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    patch:
      operationId: add_ons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddOn'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: ''
    delete:
      operationId: add_ons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this add on.
        required: true
      tags:
      - add-ons
      responses:
        '204':
          description: No response body
  /api/customer-portal/{user_address_id}/:
    get:
      operationId: customer_portal_retrieve
      parameters:
      - in: path
        name: user_address_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - customer-portal
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/day-of-weeks/:
    get:
      operationId: day_of_weeks_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - day-of-weeks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DayOfWeek'
          description: ''
    post:
      operationId: day_of_weeks_create
      tags:
      - day-of-weeks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayOfWeek'
          description: ''
  /api/day-of-weeks/{id}/:
    get:
      operationId: day_of_weeks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this day of week.
        required: true
      tags:
      - day-of-weeks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayOfWeek'
          description: ''
    put:
      operationId: day_of_weeks_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this day of week.
        required: true
      tags:
      - day-of-weeks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DayOfWeek'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayOfWeek'
          description: ''
    patch:
      operationId: day_of_weeks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this day of week.
        required: true
      tags:
      - day-of-weeks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDayOfWeek'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDayOfWeek'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDayOfWeek'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DayOfWeek'
          description: ''
    delete:
      operationId: day_of_weeks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this day of week.
        required: true
      tags:
      - day-of-weeks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/disposal-location-waste-types/:
    get:
      operationId: disposal_location_waste_types_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - disposal-location-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    post:
      operationId: disposal_location_waste_types_create
      tags:
      - disposal-location-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
  /api/disposal-location-waste-types/{id}/:
    get:
      operationId: disposal_location_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - disposal-location-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    put:
      operationId: disposal_location_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - disposal-location-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocationWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    patch:
      operationId: disposal_location_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - disposal-location-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocationWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocationWasteType'
          description: ''
    delete:
      operationId: disposal_location_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location waste type.
        required: true
      tags:
      - disposal-location-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/disposal-locations/:
    get:
      operationId: disposal_locations_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - disposal-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisposalLocation'
          description: ''
    post:
      operationId: disposal_locations_create
      tags:
      - disposal-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
  /api/disposal-locations/{id}/:
    get:
      operationId: disposal_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - disposal-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    put:
      operationId: disposal_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - disposal-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DisposalLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    patch:
      operationId: disposal_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - disposal-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDisposalLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposalLocation'
          description: ''
    delete:
      operationId: disposal_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this disposal location.
        required: true
      tags:
      - disposal-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/exports/denver-compliance/:
    post:
      operationId: exports_denver_compliance_create
      tags:
      - exports
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/main-product-add-ons/:
    get:
      operationId: main_product_add_ons_list
      parameters:
      - in: query
        name: add_on
        schema:
          type: string
          format: uuid
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - main-product-add-ons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    post:
      operationId: main_product_add_ons_create
      tags:
      - main-product-add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
  /api/main-product-add-ons/{id}/:
    get:
      operationId: main_product_add_ons_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - main-product-add-ons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    put:
      operationId: main_product_add_ons_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - main-product-add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductAddOn'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    patch:
      operationId: main_product_add_ons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - main-product-add-ons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductAddOn'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductAddOn'
          description: ''
    delete:
      operationId: main_product_add_ons_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product add on.
        required: true
      tags:
      - main-product-add-ons
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/main-product-categories/:
    get:
      operationId: main_product_categories_list
      tags:
      - main-product-categories
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductCategory'
          description: ''
    post:
      operationId: main_product_categories_create
      tags:
      - main-product-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
  /api/main-product-categories/{id}/:
    get:
      operationId: main_product_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - main-product-categories
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    put:
      operationId: main_product_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - main-product-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategory'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    patch:
      operationId: main_product_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - main-product-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategory'
          description: ''
    delete:
      operationId: main_product_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category.
        required: true
      tags:
      - main-product-categories
      responses:
        '204':
          description: No response body
  /api/main-product-category-infos/:
    get:
      operationId: main_product_category_infos_list
      parameters:
      - in: query
        name: main_product_category
        schema:
          type: string
          format: uuid
      tags:
      - main-product-category-infos
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    post:
      operationId: main_product_category_infos_create
      tags:
      - main-product-category-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
  /api/main-product-category-infos/{id}/:
    get:
      operationId: main_product_category_infos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - main-product-category-infos
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    put:
      operationId: main_product_category_infos_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - main-product-category-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductCategoryInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    patch:
      operationId: main_product_category_infos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - main-product-category-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductCategoryInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductCategoryInfo'
          description: ''
    delete:
      operationId: main_product_category_infos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product category info.
        required: true
      tags:
      - main-product-category-infos
      responses:
        '204':
          description: No response body
  /api/main-product-infos/:
    get:
      operationId: main_product_infos_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - main-product-infos
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductInfo'
          description: ''
    post:
      operationId: main_product_infos_create
      tags:
      - main-product-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
  /api/main-product-infos/{id}/:
    get:
      operationId: main_product_infos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - main-product-infos
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    put:
      operationId: main_product_infos_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - main-product-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductInfo'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    patch:
      operationId: main_product_infos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - main-product-infos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductInfo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductInfo'
          description: ''
    delete:
      operationId: main_product_infos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product info.
        required: true
      tags:
      - main-product-infos
      responses:
        '204':
          description: No response body
  /api/main-product-service-recurring-frequencies/:
    get:
      operationId: main_product_service_recurring_frequencies_list
      tags:
      - main-product-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          description: ''
    post:
      operationId: main_product_service_recurring_frequencies_create
      tags:
      - main-product-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          description: ''
  /api/main-product-service-recurring-frequencies/{id}/:
    get:
      operationId: main_product_service_recurring_frequencies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product service recurring
          frequency.
        required: true
      tags:
      - main-product-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          description: ''
    put:
      operationId: main_product_service_recurring_frequencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product service recurring
          frequency.
        required: true
      tags:
      - main-product-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          description: ''
    patch:
      operationId: main_product_service_recurring_frequencies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product service recurring
          frequency.
        required: true
      tags:
      - main-product-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductServiceRecurringFrequency'
          description: ''
    delete:
      operationId: main_product_service_recurring_frequencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product service recurring
          frequency.
        required: true
      tags:
      - main-product-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/main-product-waste-types/:
    get:
      operationId: main_product_waste_types_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - main-product-waste-types
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    post:
      operationId: main_product_waste_types_create
      tags:
      - main-product-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
  /api/main-product-waste-types/{id}/:
    get:
      operationId: main_product_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - main-product-waste-types
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    put:
      operationId: main_product_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - main-product-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProductWasteType'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    patch:
      operationId: main_product_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - main-product-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProductWasteType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProductWasteType'
          description: ''
    delete:
      operationId: main_product_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product waste type.
        required: true
      tags:
      - main-product-waste-types
      responses:
        '204':
          description: No response body
  /api/main-products/:
    get:
      operationId: main_products_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: main_product_category__id
        schema:
          type: string
          format: uuid
      tags:
      - main-products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainProduct'
          description: ''
    post:
      operationId: main_products_create
      tags:
      - main-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProduct'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
  /api/main-products/{id}/:
    get:
      operationId: main_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - main-products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    put:
      operationId: main_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - main-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MainProduct'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    patch:
      operationId: main_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - main-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMainProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainProduct'
          description: ''
    delete:
      operationId: main_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this main product.
        required: true
      tags:
      - main-products
      responses:
        '204':
          description: No response body
  /api/order-disposal-tickets/:
    get:
      operationId: order_disposal_tickets_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - order-disposal-tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    post:
      operationId: order_disposal_tickets_create
      tags:
      - order-disposal-tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
  /api/order-disposal-tickets/{id}/:
    get:
      operationId: order_disposal_tickets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - order-disposal-tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    put:
      operationId: order_disposal_tickets_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - order-disposal-tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisposalTicket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    patch:
      operationId: order_disposal_tickets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - order-disposal-tickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisposalTicket'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisposalTicket'
          description: ''
    delete:
      operationId: order_disposal_tickets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order disposal ticket.
        required: true
      tags:
      - order-disposal-tickets
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order-groups/:
    get:
      operationId: order_groups_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user_address
        schema:
          type: string
          format: uuid
      tags:
      - order-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderGroup'
          description: ''
    post:
      operationId: order_groups_create
      tags:
      - order-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
  /api/order-groups-for-seller/:
    get:
      operationId: order_groups_for_seller_list
      tags:
      - order-groups-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderGroup'
          description: ''
    post:
      operationId: order_groups_for_seller_create
      tags:
      - order-groups-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
  /api/order-groups-for-seller/{id}/:
    get:
      operationId: order_groups_for_seller_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    put:
      operationId: order_groups_for_seller_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    patch:
      operationId: order_groups_for_seller_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    delete:
      operationId: order_groups_for_seller_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order-groups/{id}/:
    get:
      operationId: order_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    put:
      operationId: order_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    patch:
      operationId: order_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderGroup'
          description: ''
    delete:
      operationId: order_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order group.
        required: true
      tags:
      - order-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order-line-item-types/:
    get:
      operationId: order_line_item_types_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - order-line-item-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderLineItemType'
          description: ''
    post:
      operationId: order_line_item_types_create
      tags:
      - order-line-item-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItemType'
          description: ''
  /api/order-line-item-types/{id}/:
    get:
      operationId: order_line_item_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item type.
        required: true
      tags:
      - order-line-item-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItemType'
          description: ''
    put:
      operationId: order_line_item_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item type.
        required: true
      tags:
      - order-line-item-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLineItemType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItemType'
          description: ''
    patch:
      operationId: order_line_item_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item type.
        required: true
      tags:
      - order-line-item-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItemType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItemType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItemType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItemType'
          description: ''
    delete:
      operationId: order_line_item_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item type.
        required: true
      tags:
      - order-line-item-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order-line-items/:
    get:
      operationId: order_line_items_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: order
        schema:
          type: string
          format: uuid
      tags:
      - order-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderLineItem'
          description: ''
    post:
      operationId: order_line_items_create
      tags:
      - order-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItem'
          description: ''
  /api/order-line-items/{id}/:
    get:
      operationId: order_line_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item.
        required: true
      tags:
      - order-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItem'
          description: ''
    put:
      operationId: order_line_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item.
        required: true
      tags:
      - order-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderLineItem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItem'
          description: ''
    patch:
      operationId: order_line_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item.
        required: true
      tags:
      - order-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderLineItem'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderLineItem'
          description: ''
    delete:
      operationId: order_line_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order line item.
        required: true
      tags:
      - order-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/order/pricing/{order_id}/:
    get:
      operationId: order_pricing_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
        required: true
      tags:
      - order
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/orders/:
    get:
      operationId: orders_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: order_group
        schema:
          type: string
          format: uuid
      - in: query
        name: submitted_on__isnull
        schema:
          type: boolean
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders-for-seller/:
    get:
      operationId: orders_for_seller_list
      tags:
      - orders-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_for_seller_create
      tags:
      - orders-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders-for-seller/{id}/:
    get:
      operationId: orders_for_seller_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_for_seller_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_for_seller_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_for_seller_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/payment-intents/:
    get:
      operationId: payment_intents_retrieve
      tags:
      - payment-intents
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/payment-methods/:
    get:
      operationId: payment_methods_list
      tags:
      - payment-methods
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
          description: ''
    post:
      operationId: payment_methods_create
      tags:
      - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
  /api/payment-methods/{id}/:
    get:
      operationId: payment_methods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment method.
        required: true
      tags:
      - payment-methods
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    put:
      operationId: payment_methods_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment method.
        required: true
      tags:
      - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    patch:
      operationId: payment_methods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment method.
        required: true
      tags:
      - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethod'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    delete:
      operationId: payment_methods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payment method.
        required: true
      tags:
      - payment-methods
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/payouts/:
    get:
      operationId: payouts_list
      parameters:
      - in: query
        name: order
        schema:
          type: string
          format: uuid
      tags:
      - payouts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payout'
          description: ''
    post:
      operationId: payouts_create
      tags:
      - payouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payout'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
          description: ''
  /api/payouts/{id}/:
    get:
      operationId: payouts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payout.
        required: true
      tags:
      - payouts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
          description: ''
    put:
      operationId: payouts_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payout.
        required: true
      tags:
      - payouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payout'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
          description: ''
    patch:
      operationId: payouts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payout.
        required: true
      tags:
      - payouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayout'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
          description: ''
    delete:
      operationId: payouts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this payout.
        required: true
      tags:
      - payouts
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/prediction:
    post:
      operationId: prediction_create
      tags:
      - prediction
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/pricing/:
    post:
      operationId: pricing_create
      tags:
      - pricing
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/product-add-on-choices/:
    get:
      operationId: product_add_on_choices_list
      parameters:
      - in: query
        name: add_on_choice
        schema:
          type: string
          format: uuid
      - in: query
        name: product
        schema:
          type: string
          format: uuid
      - in: query
        name: product__main_product
        schema:
          type: string
          format: uuid
      tags:
      - product-add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    post:
      operationId: product_add_on_choices_create
      tags:
      - product-add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
  /api/product-add-on-choices/{id}/:
    get:
      operationId: product_add_on_choices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - product-add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    put:
      operationId: product_add_on_choices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - product-add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductAddOnChoice'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    patch:
      operationId: product_add_on_choices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - product-add-on-choices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductAddOnChoice'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAddOnChoice'
          description: ''
    delete:
      operationId: product_add_on_choices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product add on choice.
        required: true
      tags:
      - product-add-on-choices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      parameters:
      - in: query
        name: main_product
        schema:
          type: string
          format: uuid
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/seller-invoice-payable-line-items/:
    get:
      operationId: seller_invoice_payable_line_items_list
      parameters:
      - in: query
        name: order
        schema:
          type: string
          format: uuid
      tags:
      - seller-invoice-payable-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          description: ''
    post:
      operationId: seller_invoice_payable_line_items_create
      tags:
      - seller-invoice-payable-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          description: ''
  /api/seller-invoice-payable-line-items/{id}/:
    get:
      operationId: seller_invoice_payable_line_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable line item.
        required: true
      tags:
      - seller-invoice-payable-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          description: ''
    put:
      operationId: seller_invoice_payable_line_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable line item.
        required: true
      tags:
      - seller-invoice-payable-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayableLineItem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          description: ''
    patch:
      operationId: seller_invoice_payable_line_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable line item.
        required: true
      tags:
      - seller-invoice-payable-line-items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayableLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayableLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayableLineItem'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayableLineItem'
          description: ''
    delete:
      operationId: seller_invoice_payable_line_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable line item.
        required: true
      tags:
      - seller-invoice-payable-line-items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-invoice-payables/:
    get:
      operationId: seller_invoice_payables_list
      tags:
      - seller-invoice-payables
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerInvoicePayable'
          description: ''
    post:
      operationId: seller_invoice_payables_create
      tags:
      - seller-invoice-payables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayable'
          description: ''
  /api/seller-invoice-payables/{id}/:
    get:
      operationId: seller_invoice_payables_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable.
        required: true
      tags:
      - seller-invoice-payables
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayable'
          description: ''
    put:
      operationId: seller_invoice_payables_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable.
        required: true
      tags:
      - seller-invoice-payables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerInvoicePayable'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayable'
          description: ''
    patch:
      operationId: seller_invoice_payables_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable.
        required: true
      tags:
      - seller-invoice-payables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerInvoicePayable'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerInvoicePayable'
          description: ''
    delete:
      operationId: seller_invoice_payables_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller invoice payable.
        required: true
      tags:
      - seller-invoice-payables
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-locations/:
    get:
      operationId: seller_locations_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      tags:
      - seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerLocation'
          description: ''
    post:
      operationId: seller_locations_create
      tags:
      - seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
  /api/seller-locations/{id}/:
    get:
      operationId: seller_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    put:
      operationId: seller_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    patch:
      operationId: seller_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerLocation'
          description: ''
    delete:
      operationId: seller_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller location.
        required: true
      tags:
      - seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-material-waste-types/:
    get:
      operationId: seller_product_seller_location_material_waste_types_list
      parameters:
      - in: query
        name: main_product_waste_type
        schema:
          type: string
          format: uuid
      - in: query
        name: seller_product_seller_location_material
        schema:
          type: string
          format: uuid
      tags:
      - seller-product-seller-location-material-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    post:
      operationId: seller_product_seller_location_material_waste_types_create
      tags:
      - seller-product-seller-location-material-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
  /api/seller-product-seller-location-material-waste-types/{id}/:
    get:
      operationId: seller_product_seller_location_material_waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - seller-product-seller-location-material-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    put:
      operationId: seller_product_seller_location_material_waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - seller-product-seller-location-material-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    patch:
      operationId: seller_product_seller_location_material_waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - seller-product-seller-location-material-waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterialWasteType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          description: ''
    delete:
      operationId: seller_product_seller_location_material_waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material waste type.
        required: true
      tags:
      - seller-product-seller-location-material-waste-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-materials/:
    get:
      operationId: seller_product_seller_location_materials_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - seller-product-seller-location-materials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    post:
      operationId: seller_product_seller_location_materials_create
      tags:
      - seller-product-seller-location-materials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
  /api/seller-product-seller-location-materials/{id}/:
    get:
      operationId: seller_product_seller_location_materials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - seller-product-seller-location-materials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    put:
      operationId: seller_product_seller_location_materials_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - seller-product-seller-location-materials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    patch:
      operationId: seller_product_seller_location_materials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - seller-product-seller-location-materials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationMaterial'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          description: ''
    delete:
      operationId: seller_product_seller_location_materials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          material.
        required: true
      tags:
      - seller-product-seller-location-materials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-rentals/:
    get:
      operationId: seller_product_seller_location_rentals_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - seller-product-seller-location-rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    post:
      operationId: seller_product_seller_location_rentals_create
      tags:
      - seller-product-seller-location-rentals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
  /api/seller-product-seller-location-rentals/{id}/:
    get:
      operationId: seller_product_seller_location_rentals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - seller-product-seller-location-rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    put:
      operationId: seller_product_seller_location_rentals_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - seller-product-seller-location-rentals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationRental'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    patch:
      operationId: seller_product_seller_location_rentals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - seller-product-seller-location-rentals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationRental'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationRental'
          description: ''
    delete:
      operationId: seller_product_seller_location_rentals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          rental.
        required: true
      tags:
      - seller-product-seller-location-rentals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-service-recurring-frequencies/:
    get:
      operationId: seller_product_seller_location_service_recurring_frequencies_list
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    post:
      operationId: seller_product_seller_location_service_recurring_frequencies_create
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
  /api/seller-product-seller-location-service-recurring-frequencies/{id}/:
    get:
      operationId: seller_product_seller_location_service_recurring_frequencies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    put:
      operationId: seller_product_seller_location_service_recurring_frequencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    patch:
      operationId: seller_product_seller_location_service_recurring_frequencies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationServiceRecurringFrequency'
          description: ''
    delete:
      operationId: seller_product_seller_location_service_recurring_frequencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service recurring frequency.
        required: true
      tags:
      - seller-product-seller-location-service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-location-services/:
    get:
      operationId: seller_product_seller_location_services_list
      parameters:
      - in: query
        name: seller_product_seller_location
        schema:
          type: string
          format: uuid
      tags:
      - seller-product-seller-location-services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    post:
      operationId: seller_product_seller_location_services_create
      tags:
      - seller-product-seller-location-services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
  /api/seller-product-seller-location-services/{id}/:
    get:
      operationId: seller_product_seller_location_services_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - seller-product-seller-location-services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    put:
      operationId: seller_product_seller_location_services_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - seller-product-seller-location-services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocationService'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    patch:
      operationId: seller_product_seller_location_services_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - seller-product-seller-location-services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocationService'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocationService'
          description: ''
    delete:
      operationId: seller_product_seller_location_services_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location
          service.
        required: true
      tags:
      - seller-product-seller-location-services
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-product-seller-locations/:
    get:
      operationId: seller_product_seller_locations_list
      parameters:
      - in: query
        name: seller_location
        schema:
          type: string
          format: uuid
      - in: query
        name: seller_product
        schema:
          type: string
          format: uuid
      tags:
      - seller-product-seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    post:
      operationId: seller_product_seller_locations_create
      tags:
      - seller-product-seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
  /api/seller-product-seller-locations/{id}/:
    get:
      operationId: seller_product_seller_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - seller-product-seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    put:
      operationId: seller_product_seller_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - seller-product-seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProductSellerLocation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    patch:
      operationId: seller_product_seller_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - seller-product-seller-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProductSellerLocation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProductSellerLocation'
          description: ''
    delete:
      operationId: seller_product_seller_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product seller location.
        required: true
      tags:
      - seller-product-seller-locations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/seller-products/:
    get:
      operationId: seller_products_list
      parameters:
      - in: query
        name: product
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      tags:
      - seller-products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerProduct'
          description: ''
    post:
      operationId: seller_products_create
      tags:
      - seller-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProduct'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
  /api/seller-products/{id}/:
    get:
      operationId: seller_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - seller-products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    put:
      operationId: seller_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - seller-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SellerProduct'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    patch:
      operationId: seller_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - seller-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSellerProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerProduct'
          description: ''
    delete:
      operationId: seller_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller product.
        required: true
      tags:
      - seller-products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/sellers/:
    get:
      operationId: sellers_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - sellers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seller'
          description: ''
    post:
      operationId: sellers_create
      tags:
      - sellers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
  /api/sellers/{id}/:
    get:
      operationId: sellers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - sellers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    put:
      operationId: sellers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - sellers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    patch:
      operationId: sellers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - sellers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    delete:
      operationId: sellers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this seller.
        required: true
      tags:
      - sellers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/service-recurring-frequencies/:
    get:
      operationId: service_recurring_frequencies_list
      tags:
      - service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRecurringFrequency'
          description: ''
    post:
      operationId: service_recurring_frequencies_create
      tags:
      - service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRecurringFrequency'
          description: ''
  /api/service-recurring-frequencies/{id}/:
    get:
      operationId: service_recurring_frequencies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this service recurring frequency.
        required: true
      tags:
      - service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRecurringFrequency'
          description: ''
    put:
      operationId: service_recurring_frequencies_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this service recurring frequency.
        required: true
      tags:
      - service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRecurringFrequency'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRecurringFrequency'
          description: ''
    patch:
      operationId: service_recurring_frequencies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this service recurring frequency.
        required: true
      tags:
      - service-recurring-frequencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRecurringFrequency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRecurringFrequency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRecurringFrequency'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRecurringFrequency'
          description: ''
    delete:
      operationId: service_recurring_frequencies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this service recurring frequency.
        required: true
      tags:
      - service-recurring-frequencies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/service-requests/{id}/payout:
    get:
      operationId: service_requests_payout_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - service-requests
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/sessions:
    get:
      operationId: sessions_retrieve
      tags:
      - sessions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/setup-intents/:
    get:
      operationId: setup_intents_retrieve
      tags:
      - setup-intents
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/billing/invoice-items:
    get:
      operationId: stripe_billing_invoice_items_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/billing/invoices:
    get:
      operationId: stripe_billing_invoices_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/billing/subscriptions:
    get:
      operationId: stripe_billing_subscriptions_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/connect/accounts:
    get:
      operationId: stripe_connect_accounts_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/connect/transfers:
    get:
      operationId: stripe_connect_transfers_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/balance:
    get:
      operationId: stripe_core_balance_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/balance-transactions:
    get:
      operationId: stripe_core_balance_transactions_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/stripe/core/payment-intents:
    get:
      operationId: stripe_core_payment_intents_retrieve
      tags:
      - stripe
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/subscriptions/:
    get:
      operationId: subscriptions_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - subscriptions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
    post:
      operationId: subscriptions_create
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/subscriptions/{id}/:
    get:
      operationId: subscriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    put:
      operationId: subscriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: subscriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    delete:
      operationId: subscriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/time-slots/:
    get:
      operationId: time_slots_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - time-slots
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeSlot'
          description: ''
    post:
      operationId: time_slots_create
      tags:
      - time-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeSlot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlot'
          description: ''
  /api/time-slots/{id}/:
    get:
      operationId: time_slots_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time slot.
        required: true
      tags:
      - time-slots
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlot'
          description: ''
    put:
      operationId: time_slots_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time slot.
        required: true
      tags:
      - time-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeSlot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlot'
          description: ''
    patch:
      operationId: time_slots_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time slot.
        required: true
      tags:
      - time-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimeSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimeSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimeSlot'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlot'
          description: ''
    delete:
      operationId: time_slots_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this time slot.
        required: true
      tags:
      - time-slots
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-address-types/:
    get:
      operationId: user_address_types_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - user-address-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddressType'
          description: ''
    post:
      operationId: user_address_types_create
      tags:
      - user-address-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddressType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
  /api/user-address-types/{id}/:
    get:
      operationId: user_address_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - user-address-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    put:
      operationId: user_address_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - user-address-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddressType'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    patch:
      operationId: user_address_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - user-address-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddressType'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddressType'
          description: ''
    delete:
      operationId: user_address_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address type.
        required: true
      tags:
      - user-address-types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-addresses/:
    get:
      operationId: user_addresses_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      tags:
      - user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddress'
          description: ''
    post:
      operationId: user_addresses_create
      tags:
      - user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/user-addresses-for-seller/:
    get:
      operationId: user_addresses_for_seller_list
      tags:
      - user-addresses-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddress'
          description: ''
    post:
      operationId: user_addresses_for_seller_create
      tags:
      - user-addresses-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/user-addresses-for-seller/{id}/:
    get:
      operationId: user_addresses_for_seller_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: user_addresses_for_seller_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: user_addresses_for_seller_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses-for-seller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: user_addresses_for_seller_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses-for-seller
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-addresses/{id}/:
    get:
      operationId: user_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: user_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: user_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: user_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user address.
        required: true
      tags:
      - user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-group-billings/:
    get:
      operationId: user_group_billings_list
      tags:
      - user-group-billings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupBilling'
          description: ''
    post:
      operationId: user_group_billings_create
      tags:
      - user-group-billings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupBilling'
          description: ''
  /api/user-group-billings/{id}/:
    get:
      operationId: user_group_billings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group billing.
        required: true
      tags:
      - user-group-billings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupBilling'
          description: ''
    put:
      operationId: user_group_billings_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group billing.
        required: true
      tags:
      - user-group-billings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupBilling'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupBilling'
          description: ''
    patch:
      operationId: user_group_billings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group billing.
        required: true
      tags:
      - user-group-billings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupBilling'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupBilling'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupBilling'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupBilling'
          description: ''
    delete:
      operationId: user_group_billings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group billing.
        required: true
      tags:
      - user-group-billings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-group-credit-applications/:
    get:
      operationId: user_group_credit_applications_list
      tags:
      - user-group-credit-applications
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupCreditApplication'
          description: ''
    post:
      operationId: user_group_credit_applications_create
      tags:
      - user-group-credit-applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupCreditApplication'
          description: ''
  /api/user-group-credit-applications/{id}/:
    get:
      operationId: user_group_credit_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group credit application.
        required: true
      tags:
      - user-group-credit-applications
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupCreditApplication'
          description: ''
    put:
      operationId: user_group_credit_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group credit application.
        required: true
      tags:
      - user-group-credit-applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupCreditApplication'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupCreditApplication'
          description: ''
    patch:
      operationId: user_group_credit_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group credit application.
        required: true
      tags:
      - user-group-credit-applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupCreditApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupCreditApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupCreditApplication'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupCreditApplication'
          description: ''
    delete:
      operationId: user_group_credit_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group credit application.
        required: true
      tags:
      - user-group-credit-applications
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-group-legals/:
    get:
      operationId: user_group_legals_list
      tags:
      - user-group-legals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupLegal'
          description: ''
    post:
      operationId: user_group_legals_create
      tags:
      - user-group-legals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupLegal'
          description: ''
  /api/user-group-legals/{id}/:
    get:
      operationId: user_group_legals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group legal.
        required: true
      tags:
      - user-group-legals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupLegal'
          description: ''
    put:
      operationId: user_group_legals_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group legal.
        required: true
      tags:
      - user-group-legals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroupLegal'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupLegal'
          description: ''
    patch:
      operationId: user_group_legals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group legal.
        required: true
      tags:
      - user-group-legals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupLegal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupLegal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroupLegal'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupLegal'
          description: ''
    delete:
      operationId: user_group_legals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group legal.
        required: true
      tags:
      - user-group-legals
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-groups/:
    get:
      operationId: user_groups_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: share_code
        schema:
          type: string
      tags:
      - user-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
          description: ''
    post:
      operationId: user_groups_create
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/user-groups/{id}/:
    get:
      operationId: user_groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - user-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    put:
      operationId: user_groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    patch:
      operationId: user_groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - user-groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: ''
    delete:
      operationId: user_groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user group.
        required: true
      tags:
      - user-groups
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-seller-review-aggregates/:
    get:
      operationId: user_seller_review_aggregates_list
      tags:
      - user-seller-review-aggregates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    post:
      operationId: user_seller_review_aggregates_create
      tags:
      - user-seller-review-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
  /api/user-seller-review-aggregates/{id}/:
    get:
      operationId: user_seller_review_aggregates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-seller-review-aggregates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    put:
      operationId: user_seller_review_aggregates_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-seller-review-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReviewAggregate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    patch:
      operationId: user_seller_review_aggregates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-seller-review-aggregates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReviewAggregate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReviewAggregate'
          description: ''
    delete:
      operationId: user_seller_review_aggregates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - user-seller-review-aggregates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-seller-reviews/:
    get:
      operationId: user_seller_reviews_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: seller
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - user-seller-reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSellerReview'
          description: ''
    post:
      operationId: user_seller_reviews_create
      tags:
      - user-seller-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
  /api/user-seller-reviews/{id}/:
    get:
      operationId: user_seller_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - user-seller-reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    put:
      operationId: user_seller_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - user-seller-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSellerReview'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    patch:
      operationId: user_seller_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - user-seller-reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSellerReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSellerReview'
          description: ''
    delete:
      operationId: user_seller_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user seller review.
        required: true
      tags:
      - user-seller-reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user-user-addresses/:
    get:
      operationId: user_user_addresses_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      - in: query
        name: user_address
        schema:
          type: string
          format: uuid
      tags:
      - user-user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserUserAddress'
          description: ''
    post:
      operationId: user_user_addresses_create
      tags:
      - user-user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
  /api/user-user-addresses/{id}/:
    get:
      operationId: user_user_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - user-user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    put:
      operationId: user_user_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - user-user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUserAddress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    patch:
      operationId: user_user_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - user-user-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUserAddress'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUserAddress'
          description: ''
    delete:
      operationId: user_user_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user user address.
        required: true
      tags:
      - user-user-addresses
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: user_id
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/waste-types/:
    get:
      operationId: waste_types_list
      tags:
      - waste-types
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WasteType'
          description: ''
    post:
      operationId: waste_types_create
      tags:
      - waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
  /api/waste-types/{id}/:
    get:
      operationId: waste_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - waste-types
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    put:
      operationId: waste_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    patch:
      operationId: waste_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - waste-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWasteType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
          description: ''
    delete:
      operationId: waste_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this waste type.
        required: true
      tags:
      - waste-types
      responses:
        '204':
          description: No response body
components:
  schemas:
    AddOn:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - name
      - sort
      - updated_on
    AddOnChoice:
      type: object
      properties:
        id:
          type: string
          nullable: true
        add_on:
          allOf:
          - $ref: '#/components/schemas/AddOn'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
      required:
      - add_on
      - created_on
      - name
      - updated_on
    BadgeEnum:
      enum:
      - New
      - Pro
      - Platinum
      type: string
      description: |-
        * `New` - New
        * `Pro` - Pro
        * `Platinum` - Platinum
    BlankEnum:
      enum:
      - ''
    ComplianceStatusEnum:
      enum:
      - NOT_REQUIRED
      - REQUESTED
      - IN-PROGRESS
      - NEEDS_REVIEW
      - APPROVED
      type: string
      description: |-
        * `NOT_REQUIRED` - Not Required
        * `REQUESTED` - Requested
        * `IN-PROGRESS` - In-Progress
        * `NEEDS_REVIEW` - Needs Review
        * `APPROVED` - Approved
    DayOfWeek:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - created_on
      - name
      - number
      - updated_on
    DisposalLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - city
      - country
      - created_on
      - latitude
      - longitude
      - name
      - postal_code
      - state
      - street
      - updated_on
    DisposalLocationWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        disposal_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
      required:
      - created_on
      - disposal_location
      - price_per_ton
      - updated_on
      - waste_type
    IndustryEnum:
      enum:
      - property_management
      - construction
      - manufacturing
      - waste_collection
      - other
      type: string
      description: |-
        * `property_management` - Property Management
        * `construction` - Construction
        * `manufacturing` - Manufacturing
        * `waste_collection` - Waste Collection
        * `other` - Other
    InvoiceFrequencyEnum:
      enum:
      - 0
      - 7
      - 14
      - 30
      type: integer
      description: |-
        * `0` - Immediately
        * `7` - Weekly
        * `14` - Bi-Weekly
        * `30` - Monthly
    LocationTypeEnum:
      enum:
      - Services
      - Disposal site
      type: string
      description: |-
        * `Services` - Services
        * `Disposal site` - Disposal site
    MainProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        main_product_category:
          allOf:
          - $ref: '#/components/schemas/MainProductCategory'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        cubic_yards:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        image_del:
          type: string
          nullable: true
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        included_tonnage_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        price_per_additional_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_tonnage_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_rate:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        included_rate_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        main_product_code:
          type: string
          nullable: true
          maxLength: 255
        has_service:
          type: boolean
        has_rental:
          type: boolean
        has_material:
          type: boolean
      required:
      - created_on
      - main_product_category
      - name
      - sort
      - updated_on
    MainProductAddOn:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        add_on:
          type: string
          format: uuid
      required:
      - add_on
      - created_on
      - main_product
      - updated_on
    MainProductCategory:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category_code:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created_on
      - name
      - sort
      - updated_on
    MainProductCategoryInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_category
      - name
      - sort
      - updated_on
    MainProductInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - name
      - sort
      - updated_on
    MainProductServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        service_recurring_frequency:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - service_recurring_frequency
      - updated_on
    MainProductWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        waste_type:
          type: string
          format: uuid
        main_product:
          type: string
          format: uuid
      required:
      - created_on
      - main_product
      - updated_on
      - waste_type
    NetTermsEnum:
      enum:
      - 0
      - 14
      - 30
      - 45
      - 60
      type: integer
      description: |-
        * `0` - Immediately
        * `14` - Net 14
        * `30` - Net 30
        * `45` - Net 45
        * `60` - Net 60
    NullEnum:
      enum:
      - null
    OpenDaysEnum:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
      description: |-
        * `MONDAY` - MONDAY
        * `TUESDAY` - TUESDAY
        * `WEDNESDAY` - WEDNESDAY
        * `THURSDAY` - THURSDAY
        * `FRIDAY` - FRIDAY
        * `SATURDAY` - SATURDAY
        * `SUNDAY` - SUNDAY
    Order:
      type: object
      properties:
        id:
          type: string
          nullable: true
        order_line_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem'
          readOnly: true
        order_type:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        service_date:
          type: string
          format: date
        submitted_on:
          type: string
          format: date-time
          nullable: true
        stripe_invoice_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_order_id:
          type: string
          nullable: true
          maxLength: 255
        schedule_details:
          type: string
          nullable: true
        price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        included_weight_tons:
          type: number
          format: double
          maximum: 100000000000000
          minimum: -100000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        billing_comments_internal_use:
          type: string
          nullable: true
        schedule_window:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ScheduleWindowEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        supplier_payout_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SupplierPayoutStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        suppplier_payout_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SuppplierPayoutMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        tax_rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        quantity:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        unit_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        payout_processing_error_comment:
          type: string
          nullable: true
        order_group:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - end_date
      - order_group
      - order_line_items
      - order_type
      - service_date
      - start_date
      - updated_on
    OrderDisposalTicket:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        ticket_id:
          type: string
          maxLength: 255
        weight:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        order:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - order
      - ticket_id
      - updated_on
      - waste_type
      - weight
    OrderGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        user_address:
          allOf:
          - $ref: '#/components/schemas/UserAddress'
          readOnly: true
        user_address_id:
          type: string
          format: uuid
          writeOnly: true
        seller_product_seller_location:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocation'
          readOnly: true
        seller_product_seller_location_id:
          type: string
          format: uuid
          writeOnly: true
        waste_type:
          allOf:
          - $ref: '#/components/schemas/WasteType'
          readOnly: true
        waste_type_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        time_slot:
          allOf:
          - $ref: '#/components/schemas/TimeSlot'
          readOnly: true
        time_slot_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        service_recurring_frequency:
          allOf:
          - $ref: '#/components/schemas/ServiceRecurringFrequency'
          readOnly: true
        service_recurring_frequency_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        preferred_service_days:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
          readOnly: true
        preferred_service_day_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/OrderGroupService'
          nullable: true
        rental:
          allOf:
          - $ref: '#/components/schemas/OrderGroupRental'
          nullable: true
        material:
          allOf:
          - $ref: '#/components/schemas/OrderGroupMaterial'
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          readOnly: true
        active:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        access_details:
          type: string
          nullable: true
        placement_details:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        take_rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        tonnage_quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        delivery_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        removal_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
      required:
      - active
      - created_on
      - material
      - orders
      - preferred_service_day_ids
      - preferred_service_days
      - rental
      - seller_product_seller_location
      - seller_product_seller_location_id
      - service
      - service_recurring_frequency
      - service_recurring_frequency_id
      - start_date
      - time_slot
      - time_slot_id
      - updated_on
      - user
      - user_address
      - user_address_id
      - user_id
      - waste_type
      - waste_type_id
    OrderGroupMaterial:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        order_group:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        tonnage_included:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - created_on
      - id
      - updated_on
    OrderGroupRental:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        order_group:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        included_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price_per_day_included:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        price_per_day_additional:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - created_on
      - id
      - updated_on
    OrderGroupService:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        order_group:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        miles:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
      required:
      - created_on
      - id
      - updated_on
    OrderLineItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        quantity:
          type: number
          format: double
          maximum: 100000000000000
          minimum: -100000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        platform_fee_percent:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          description: 'Enter as a percentage without the percent symbol (ex: 25.00)'
        description:
          type: string
          nullable: true
          maxLength: 255
        is_flat_rate:
          type: boolean
        stripe_invoice_line_item_id:
          type: string
          nullable: true
          maxLength: 255
        paid:
          type: boolean
        order:
          type: string
          format: uuid
        order_line_item_type:
          type: string
          format: uuid
      required:
      - created_on
      - order
      - order_line_item_type
      - quantity
      - rate
      - updated_on
    OrderLineItemType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        units:
          type: string
          maxLength: 255
        code:
          type: string
          maxLength: 255
        stripe_tax_code_id:
          type: string
          maxLength: 255
      required:
      - code
      - created_on
      - name
      - stripe_tax_code_id
      - units
      - updated_on
    OrderStatusEnum:
      enum:
      - PENDING
      - SCHEDULED
      - IN-PROGRESS
      - Awaiting Request
      - CANCELLED
      - COMPLETE
      type: string
      description: |-
        * `PENDING` - Pending
        * `SCHEDULED` - Scheduled
        * `IN-PROGRESS` - In-Progress
        * `Awaiting Request` - Awaiting Request
        * `CANCELLED` - Cancelled
        * `COMPLETE` - Complete
    PatchedAddOn:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        main_product:
          type: string
          format: uuid
    PatchedAddOnChoice:
      type: object
      properties:
        id:
          type: string
          nullable: true
        add_on:
          allOf:
          - $ref: '#/components/schemas/AddOn'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
    PatchedDayOfWeek:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedDisposalLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
    PatchedDisposalLocationWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        disposal_location:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
    PatchedMainProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        main_product_category:
          allOf:
          - $ref: '#/components/schemas/MainProductCategory'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        cubic_yards:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        ar_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        image_del:
          type: string
          nullable: true
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        included_tonnage_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        price_per_additional_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_tonnage_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_rate:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        included_rate_quantity:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        main_product_code:
          type: string
          nullable: true
          maxLength: 255
        has_service:
          type: boolean
        has_rental:
          type: boolean
        has_material:
          type: boolean
    PatchedMainProductAddOn:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        add_on:
          type: string
          format: uuid
    PatchedMainProductCategory:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        description:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category_code:
          type: string
          nullable: true
          maxLength: 255
    PatchedMainProductCategoryInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product_category:
          type: string
          format: uuid
    PatchedMainProductInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        sort:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        main_product:
          type: string
          format: uuid
    PatchedMainProductServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        main_product:
          type: string
          format: uuid
        service_recurring_frequency:
          type: string
          format: uuid
    PatchedMainProductWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        waste_type:
          type: string
          format: uuid
        main_product:
          type: string
          format: uuid
    PatchedOrder:
      type: object
      properties:
        id:
          type: string
          nullable: true
        order_line_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItem'
          readOnly: true
        order_type:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        service_date:
          type: string
          format: date
        submitted_on:
          type: string
          format: date-time
          nullable: true
        stripe_invoice_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_order_id:
          type: string
          nullable: true
          maxLength: 255
        schedule_details:
          type: string
          nullable: true
        price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        included_weight_tons:
          type: number
          format: double
          maximum: 100000000000000
          minimum: -100000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        billing_comments_internal_use:
          type: string
          nullable: true
        schedule_window:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ScheduleWindowEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        supplier_payout_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SupplierPayoutStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        suppplier_payout_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SuppplierPayoutMethodEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        tax_rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        quantity:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        unit_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        payout_processing_error_comment:
          type: string
          nullable: true
        order_group:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
    PatchedOrderDisposalTicket:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        ticket_id:
          type: string
          maxLength: 255
        weight:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        order:
          type: string
          format: uuid
        waste_type:
          type: string
          format: uuid
        disposal_location:
          type: string
          format: uuid
          nullable: true
    PatchedOrderGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        user_address:
          allOf:
          - $ref: '#/components/schemas/UserAddress'
          readOnly: true
        user_address_id:
          type: string
          format: uuid
          writeOnly: true
        seller_product_seller_location:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocation'
          readOnly: true
        seller_product_seller_location_id:
          type: string
          format: uuid
          writeOnly: true
        waste_type:
          allOf:
          - $ref: '#/components/schemas/WasteType'
          readOnly: true
        waste_type_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        time_slot:
          allOf:
          - $ref: '#/components/schemas/TimeSlot'
          readOnly: true
        time_slot_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        service_recurring_frequency:
          allOf:
          - $ref: '#/components/schemas/ServiceRecurringFrequency'
          readOnly: true
        service_recurring_frequency_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        preferred_service_days:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
          readOnly: true
        preferred_service_day_ids:
          type: array
          items:
            type: string
            format: uuid
            writeOnly: true
          writeOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/OrderGroupService'
          nullable: true
        rental:
          allOf:
          - $ref: '#/components/schemas/OrderGroupRental'
          nullable: true
        material:
          allOf:
          - $ref: '#/components/schemas/OrderGroupMaterial'
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          readOnly: true
        active:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        access_details:
          type: string
          nullable: true
        placement_details:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        take_rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        tonnage_quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        delivery_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        removal_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
    PatchedOrderLineItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        rate:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        quantity:
          type: number
          format: double
          maximum: 100000000000000
          minimum: -100000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        platform_fee_percent:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          description: 'Enter as a percentage without the percent symbol (ex: 25.00)'
        description:
          type: string
          nullable: true
          maxLength: 255
        is_flat_rate:
          type: boolean
        stripe_invoice_line_item_id:
          type: string
          nullable: true
          maxLength: 255
        paid:
          type: boolean
        order:
          type: string
          format: uuid
        order_line_item_type:
          type: string
          format: uuid
    PatchedOrderLineItemType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        units:
          type: string
          maxLength: 255
        code:
          type: string
          maxLength: 255
        stripe_tax_code_id:
          type: string
          maxLength: 255
    PatchedPaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        token:
          type: string
          writeOnly: true
        user:
          type: string
          format: uuid
        user_group:
          type: string
          format: uuid
        card:
          type: string
          readOnly: true
    PatchedPayout:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        checkbook_payout_id:
          type: string
          nullable: true
          maxLength: 255
        stripe_transfer_id:
          type: string
          nullable: true
          maxLength: 255
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        description:
          type: string
          nullable: true
          maxLength: 255
        order:
          type: string
          format: uuid
    PatchedProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        main_product:
          allOf:
          - $ref: '#/components/schemas/MainProduct'
          readOnly: true
        product_add_on_choices:
          type: array
          items:
            $ref: '#/components/schemas/ProductAddOnChoice'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product_code:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        removal_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
    PatchedProductAddOnChoice:
      type: object
      properties:
        id:
          type: string
          nullable: true
        add_on_choice:
          allOf:
          - $ref: '#/components/schemas/AddOnChoice'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        product:
          type: string
          format: uuid
    PatchedSeller:
      type: object
      properties:
        id:
          type: string
          nullable: true
        has_listings:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 40
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        order_email:
          type: string
          nullable: true
          maxLength: 255
        order_phone:
          type: string
          nullable: true
          maxLength: 10
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        location_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SellerStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        lead_time:
          type: string
          nullable: true
          maxLength: 255
        type_display:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeDisplayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        stripe_connect_id:
          type: string
          nullable: true
          maxLength: 255
        marketplace_display_name:
          type: string
          nullable: true
          maxLength: 255
        open_days:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OpenDaysEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        open_time:
          type: string
          format: time
          nullable: true
        close_time:
          type: string
          format: time
          nullable: true
        lead_time_hrs:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        announcement:
          type: string
          nullable: true
        live_menu_is_active:
          type: boolean
        location_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        downstream_insurance_requirements_met:
          type: boolean
        badge:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BadgeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        salesforce_seller_id:
          type: string
          nullable: true
          maxLength: 255
        about_us:
          type: string
          nullable: true
    PatchedSellerInvoicePayable:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        invoice_file:
          type: string
          format: uri
          nullable: true
        supplier_invoice_id:
          type: string
          maxLength: 255
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        status:
          $ref: '#/components/schemas/SellerInvoicePayableStatusEnum'
        seller_location:
          type: string
          format: uuid
    PatchedSellerInvoicePayableLineItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        description:
          type: string
          nullable: true
          maxLength: 255
        seller_invoice_payable:
          type: string
          format: uuid
          nullable: true
        order:
          type: string
          format: uuid
    PatchedSellerLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        stripe_connect_account_id:
          type: string
          nullable: true
          maxLength: 255
        sends_invoices:
          type: boolean
        payee_name:
          type: string
          nullable: true
          maxLength: 255
        order_email:
          type: string
          nullable: true
          maxLength: 255
        order_phone:
          type: string
          nullable: true
          maxLength: 10
        gl_coi:
          type: string
          format: uri
          nullable: true
        gl_coi_expiration_date:
          type: string
          format: date
          nullable: true
        gl_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        auto_coi:
          type: string
          format: uri
          nullable: true
        auto_coi_expiration_date:
          type: string
          format: date
          nullable: true
        auto_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        workers_comp_coi:
          type: string
          format: uri
          nullable: true
        workers_comp_coi_expiration_date:
          type: string
          format: date
          nullable: true
        workers_comp_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        w9:
          type: string
          format: uri
          nullable: true
    PatchedSellerProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        active:
          type: boolean
    PatchedSellerProductSellerLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller_product:
          allOf:
          - $ref: '#/components/schemas/SellerProduct'
          readOnly: true
        seller_product_id:
          type: string
          format: uuid
          writeOnly: true
        seller_location:
          allOf:
          - $ref: '#/components/schemas/SellerLocation'
          readOnly: true
        seller_location_id:
          type: string
          format: uuid
          writeOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationService'
          readOnly: true
        material:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          readOnly: true
        rental:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationRental'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        active:
          type: boolean
        total_inventory:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        min_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        service_radius:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        delivery_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        removal_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        fuel_environmental_markup:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
    PatchedSellerProductSellerLocationMaterial:
      type: object
      properties:
        id:
          type: string
          nullable: true
        waste_types:
          type: array
          items:
            $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationMaterialWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        tonnage_included:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        seller_product_seller_location_material:
          type: string
          format: uuid
        main_product_waste_type:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationRental:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        included_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price_per_day_included:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        price_per_day_additional:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationService:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_mile:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        flat_rate_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
    PatchedSellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        seller_product_seller_location_service:
          type: string
          format: uuid
        main_product_service_recurring_frequency:
          type: string
          format: uuid
    PatchedServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
    PatchedSubscription:
      type: object
      properties:
        id:
          type: string
          nullable: true
        order_number:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        subscription_number:
          type: string
          maxLength: 255
        interval_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        length_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        order_group:
          type: string
          format: uuid
        frequency:
          type: string
          format: uuid
          nullable: true
        service_day:
          type: string
          format: uuid
          nullable: true
    PatchedTimeSlot:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        start:
          type: string
          format: time
        end:
          type: string
          format: time
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user_id:
          type: string
          nullable: true
        user_group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        user_group_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        mailchip_id:
          type: string
          nullable: true
          maxLength: 255
        intercom_id:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 40
        email:
          type: string
          maxLength: 255
        photo_url:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        device_token:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
        is_archived:
          type: boolean
        salesforce_contact_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_seller_location_id:
          type: string
          nullable: true
          maxLength: 255
        terms_accepted:
          type: string
          format: date-time
          nullable: true
    PatchedUserAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        stripe_customer_id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          nullable: true
          maxLength: 255
        project_id:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        access_details:
          type: string
          nullable: true
        autopay:
          type: boolean
        is_archived:
          type: boolean
        child_account_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        user:
          type: string
          format: uuid
          nullable: true
        user_address_type:
          type: string
          format: uuid
          nullable: true
    PatchedUserAddressType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
    PatchedUserGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        legal:
          allOf:
          - $ref: '#/components/schemas/UserGroupLegal'
          readOnly: true
        credit_limit_utilized:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        pay_later:
          type: boolean
        autopay:
          type: boolean
        net_terms:
          allOf:
          - $ref: '#/components/schemas/NetTermsEnum'
          minimum: -2147483648
          maximum: 2147483647
        invoice_frequency:
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/InvoiceFrequencyEnum'
          - $ref: '#/components/schemas/NullEnum'
        invoice_day_of_month:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        is_superuser:
          type: boolean
        share_code:
          type: string
          maxLength: 6
        parent_account_id:
          type: string
          nullable: true
          maxLength: 255
        credit_line_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        compliance_status:
          $ref: '#/components/schemas/ComplianceStatusEnum'
        tax_exempt_status:
          $ref: '#/components/schemas/TaxExemptStatusEnum'
    PatchedUserGroupBilling:
      type: object
      properties:
        id:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        email:
          type: string
          format: email
          maxLength: 254
        tax_id:
          type: string
          nullable: true
          maxLength: 255
        street:
          type: string
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        user_group:
          type: string
          format: uuid
    PatchedUserGroupCreditApplication:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        requested_credit_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        user_group:
          type: string
          format: uuid
    PatchedUserGroupLegal:
      type: object
      properties:
        id:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        doing_business_as:
          type: string
          nullable: true
          maxLength: 255
        structure:
          $ref: '#/components/schemas/StructureEnum'
        industry:
          $ref: '#/components/schemas/IndustryEnum'
        street:
          type: string
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        user_group:
          type: string
          format: uuid
    PatchedUserSellerReview:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        title:
          type: string
          maxLength: 255
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          nullable: true
        is_verified:
          type: boolean
    PatchedUserSellerReviewAggregate:
      type: object
      properties:
        seller_name:
          type: string
        rating_avg:
          type: number
          format: double
        review_count:
          type: integer
    PatchedUserUserAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
    PatchedWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        token:
          type: string
          writeOnly: true
        user:
          type: string
          format: uuid
        user_group:
          type: string
          format: uuid
        card:
          type: string
          readOnly: true
      required:
      - card
      - id
      - token
      - user
      - user_group
    Payout:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        checkbook_payout_id:
          type: string
          nullable: true
          maxLength: 255
        stripe_transfer_id:
          type: string
          nullable: true
          maxLength: 255
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        description:
          type: string
          nullable: true
          maxLength: 255
        order:
          type: string
          format: uuid
      required:
      - amount
      - created_on
      - order
      - updated_on
    Product:
      type: object
      properties:
        id:
          type: string
          nullable: true
        main_product:
          allOf:
          - $ref: '#/components/schemas/MainProduct'
          readOnly: true
        product_add_on_choices:
          type: array
          items:
            $ref: '#/components/schemas/ProductAddOnChoice'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        product_code:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        removal_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
      required:
      - created_on
      - main_product
      - product_add_on_choices
      - updated_on
    ProductAddOnChoice:
      type: object
      properties:
        id:
          type: string
          nullable: true
        add_on_choice:
          allOf:
          - $ref: '#/components/schemas/AddOnChoice'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        product:
          type: string
          format: uuid
      required:
      - add_on_choice
      - created_on
      - name
      - product
      - updated_on
    ScheduleWindowEnum:
      enum:
      - Morning (7am-11am)
      - Afternoon (12pm-4pm)
      - Evening (5pm-8pm)
      type: string
      description: |-
        * `Morning (7am-11am)` - Morning (7am-11am)
        * `Afternoon (12pm-4pm)` - Afternoon (12pm-4pm)
        * `Evening (5pm-8pm)` - Evening (5pm-8pm)
    Seller:
      type: object
      properties:
        id:
          type: string
          nullable: true
        has_listings:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 40
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        order_email:
          type: string
          nullable: true
          maxLength: 255
        order_phone:
          type: string
          nullable: true
          maxLength: 10
        type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        location_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SellerStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        lead_time:
          type: string
          nullable: true
          maxLength: 255
        type_display:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TypeDisplayEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        stripe_connect_id:
          type: string
          nullable: true
          maxLength: 255
        marketplace_display_name:
          type: string
          nullable: true
          maxLength: 255
        open_days:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OpenDaysEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        open_time:
          type: string
          format: time
          nullable: true
        close_time:
          type: string
          format: time
          nullable: true
        lead_time_hrs:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        announcement:
          type: string
          nullable: true
        live_menu_is_active:
          type: boolean
        location_logo_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        downstream_insurance_requirements_met:
          type: boolean
        badge:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BadgeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        salesforce_seller_id:
          type: string
          nullable: true
          maxLength: 255
        about_us:
          type: string
          nullable: true
      required:
      - created_on
      - has_listings
      - name
      - phone
      - updated_on
    SellerInvoicePayable:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        invoice_file:
          type: string
          format: uri
          nullable: true
        supplier_invoice_id:
          type: string
          maxLength: 255
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        status:
          $ref: '#/components/schemas/SellerInvoicePayableStatusEnum'
        seller_location:
          type: string
          format: uuid
      required:
      - amount
      - created_on
      - seller_location
      - supplier_invoice_id
      - updated_on
    SellerInvoicePayableLineItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        amount:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        description:
          type: string
          nullable: true
          maxLength: 255
        seller_invoice_payable:
          type: string
          format: uuid
          nullable: true
        order:
          type: string
          format: uuid
      required:
      - amount
      - created_on
      - order
      - updated_on
    SellerInvoicePayableStatusEnum:
      enum:
      - UNPAID
      - ESCALATED
      - ERROR
      - READY_FOR_PAYOUT
      - PAID
      type: string
      description: |-
        * `UNPAID` - Unpaid
        * `ESCALATED` - Escalated
        * `ERROR` - Error
        * `READY_FOR_PAYOUT` - Ready for Payout
        * `PAID` - Paid
    SellerLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        stripe_connect_account_id:
          type: string
          nullable: true
          maxLength: 255
        sends_invoices:
          type: boolean
        payee_name:
          type: string
          nullable: true
          maxLength: 255
        order_email:
          type: string
          nullable: true
          maxLength: 255
        order_phone:
          type: string
          nullable: true
          maxLength: 10
        gl_coi:
          type: string
          format: uri
          nullable: true
        gl_coi_expiration_date:
          type: string
          format: date
          nullable: true
        gl_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        auto_coi:
          type: string
          format: uri
          nullable: true
        auto_coi_expiration_date:
          type: string
          format: date
          nullable: true
        auto_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        workers_comp_coi:
          type: string
          format: uri
          nullable: true
        workers_comp_coi_expiration_date:
          type: string
          format: date
          nullable: true
        workers_comp_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        w9:
          type: string
          format: uri
          nullable: true
      required:
      - city
      - country
      - created_on
      - name
      - postal_code
      - seller
      - seller_id
      - state
      - updated_on
    SellerProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        active:
          type: boolean
      required:
      - created_on
      - product
      - product_id
      - seller
      - seller_id
      - updated_on
    SellerProductSellerLocation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller_product:
          allOf:
          - $ref: '#/components/schemas/SellerProduct'
          readOnly: true
        seller_product_id:
          type: string
          format: uuid
          writeOnly: true
        seller_location:
          allOf:
          - $ref: '#/components/schemas/SellerLocation'
          readOnly: true
        seller_location_id:
          type: string
          format: uuid
          writeOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationService'
          readOnly: true
        material:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationMaterial'
          readOnly: true
        rental:
          allOf:
          - $ref: '#/components/schemas/SellerProductSellerLocationRental'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        active:
          type: boolean
        total_inventory:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        min_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        max_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        service_radius:
          type: number
          format: double
          maximum: 1000000000000000000
          minimum: -1000000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        delivery_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        removal_fee:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        fuel_environmental_markup:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
      required:
      - created_on
      - material
      - rental
      - seller_location
      - seller_location_id
      - seller_product
      - seller_product_id
      - service
      - updated_on
    SellerProductSellerLocationMaterial:
      type: object
      properties:
        id:
          type: string
          nullable: true
        waste_types:
          type: array
          items:
            $ref: '#/components/schemas/SellerProductSellerLocationMaterialWasteType'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - seller_product_seller_location
      - updated_on
      - waste_types
    SellerProductSellerLocationMaterialWasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_ton:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        tonnage_included:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        seller_product_seller_location_material:
          type: string
          format: uuid
        main_product_waste_type:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_waste_type
      - seller_product_seller_location_material
      - updated_on
    SellerProductSellerLocationRental:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        included_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price_per_day_included:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        price_per_day_additional:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - seller_product_seller_location
      - updated_on
    SellerProductSellerLocationService:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price_per_mile:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        flat_rate_price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        seller_product_seller_location:
          type: string
          format: uuid
      required:
      - created_on
      - seller_product_seller_location
      - updated_on
    SellerProductSellerLocationServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        price:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        seller_product_seller_location_service:
          type: string
          format: uuid
        main_product_service_recurring_frequency:
          type: string
          format: uuid
      required:
      - created_on
      - main_product_service_recurring_frequency
      - seller_product_seller_location_service
      - updated_on
    SellerStatusEnum:
      enum:
      - Inactive
      - Inactive - Onboarding
      - Inactive - Pending approval
      - Active - under review
      - Active
      type: string
      description: |-
        * `Inactive` - Inactive
        * `Inactive - Onboarding` - Inactive - Onboarding
        * `Inactive - Pending approval` - Inactive - Pending approval
        * `Active - under review` - Active - under review
        * `Active` - Active
    ServiceRecurringFrequency:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
      required:
      - created_on
      - name
      - updated_on
    StructureEnum:
      enum:
      - sole_proprietorship
      - llc
      - s_corp
      - c_corp
      - other
      type: string
      description: |-
        * `sole_proprietorship` - Sole Proprietorship
        * `llc` - Llc
        * `s_corp` - S Corp
        * `c_corp` - C Corp
        * `other` - Other
    Subscription:
      type: object
      properties:
        id:
          type: string
          nullable: true
        order_number:
          type: string
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        subscription_number:
          type: string
          maxLength: 255
        interval_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        length_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        order_group:
          type: string
          format: uuid
        frequency:
          type: string
          format: uuid
          nullable: true
        service_day:
          type: string
          format: uuid
          nullable: true
      required:
      - created_on
      - length
      - order_group
      - subscription_number
      - updated_on
    SupplierPayoutStatusEnum:
      enum:
      - Not yet paid
      - Process Payment
      - Payout Processing Error
      - Payout Completed
      type: string
      description: |-
        * `Not yet paid` - Not yet paid
        * `Process Payment` - Process Payment
        * `Payout Processing Error` - Payout Processing Error
        * `Payout Completed` - Payout Completed
    SuppplierPayoutMethodEnum:
      enum:
      - Stripe Connect
      - By Invoice
      - Other
      type: string
      description: |-
        * `Stripe Connect` - Stripe Connect
        * `By Invoice` - By Invoice
        * `Other` - Other
    TaxExemptStatusEnum:
      enum:
      - none
      - exempt
      - reverse
      type: string
      description: |-
        * `none` - None
        * `exempt` - Exempt
        * `reverse` - Reverse
    TimeSlot:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
        start:
          type: string
          format: time
        end:
          type: string
          format: time
      required:
      - created_on
      - end
      - name
      - start
      - updated_on
    TypeDisplayEnum:
      enum:
      - Landfill
      - MRF
      - Industrial
      - Scrap yard
      - Compost facility
      - Processor
      - Paint recycler
      - Tires
      - Other recycler
      - Roll-off
      - Mover
      - Junk
      - Delivery
      - Broker
      - Equipment
      type: string
      description: |-
        * `Landfill` - Landfill
        * `MRF` - MRF
        * `Industrial` - Industrial
        * `Scrap yard` - Scrap yard
        * `Compost facility` - Compost facility
        * `Processor` - Processor
        * `Paint recycler` - Paint recycler
        * `Tires` - Tires
        * `Other recycler` - Other recycler
        * `Roll-off` - Roll-off
        * `Mover` - Mover
        * `Junk` - Junk
        * `Delivery` - Delivery
        * `Broker` - Broker
        * `Equipment` - Equipment
    TypeEnum:
      enum:
      - Broker
      - Compost facility
      - Delivery
      - Equipment
      - Fencing
      - Industrial
      - Junk
      - Landfill
      - Mover
      - MRF
      - Other recycler
      - Paint recycler
      - Portable Storage
      - Portable Toilet
      - Processor
      - Roll-off
      - Scrap yard
      - Tires
      type: string
      description: |-
        * `Broker` - Broker
        * `Compost facility` - Compost facility
        * `Delivery` - Delivery
        * `Equipment` - Equipment
        * `Fencing` - Fencing
        * `Industrial` - Industrial
        * `Junk` - Junk
        * `Landfill` - Landfill
        * `Mover` - Mover
        * `MRF` - MRF
        * `Other recycler` - Other recycler
        * `Paint recycler` - Paint recycler
        * `Portable Storage` - Portable Storage
        * `Portable Toilet` - Portable Toilet
        * `Processor` - Processor
        * `Roll-off` - Roll-off
        * `Scrap yard` - Scrap yard
        * `Tires` - Tires
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user_id:
          type: string
          nullable: true
        user_group:
          allOf:
          - $ref: '#/components/schemas/UserGroup'
          readOnly: true
        user_group_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        mailchip_id:
          type: string
          nullable: true
          maxLength: 255
        intercom_id:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 40
        email:
          type: string
          maxLength: 255
        photo_url:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 255
        last_name:
          type: string
          nullable: true
          maxLength: 255
        device_token:
          type: string
          nullable: true
          maxLength: 255
        is_admin:
          type: boolean
        is_archived:
          type: boolean
        salesforce_contact_id:
          type: string
          nullable: true
          maxLength: 255
        salesforce_seller_location_id:
          type: string
          nullable: true
          maxLength: 255
        terms_accepted:
          type: string
          format: date-time
          nullable: true
      required:
      - created_on
      - email
      - updated_on
      - user_group
      - user_group_id
    UserAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        stripe_customer_id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          nullable: true
          maxLength: 255
        project_id:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
        access_details:
          type: string
          nullable: true
        autopay:
          type: boolean
        is_archived:
          type: boolean
        child_account_id:
          type: string
          nullable: true
          maxLength: 255
        user_group:
          type: string
          format: uuid
          nullable: true
        user:
          type: string
          format: uuid
          nullable: true
        user_address_type:
          type: string
          format: uuid
          nullable: true
      required:
      - city
      - country
      - created_on
      - postal_code
      - state
      - updated_on
    UserAddressType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
      required:
      - created_on
      - name
      - updated_on
    UserGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
        legal:
          allOf:
          - $ref: '#/components/schemas/UserGroupLegal'
          readOnly: true
        credit_limit_utilized:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        pay_later:
          type: boolean
        autopay:
          type: boolean
        net_terms:
          allOf:
          - $ref: '#/components/schemas/NetTermsEnum'
          minimum: -2147483648
          maximum: 2147483647
        invoice_frequency:
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/InvoiceFrequencyEnum'
          - $ref: '#/components/schemas/NullEnum'
        invoice_day_of_month:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        is_superuser:
          type: boolean
        share_code:
          type: string
          maxLength: 6
        parent_account_id:
          type: string
          nullable: true
          maxLength: 255
        credit_line_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        compliance_status:
          $ref: '#/components/schemas/ComplianceStatusEnum'
        tax_exempt_status:
          $ref: '#/components/schemas/TaxExemptStatusEnum'
      required:
      - created_on
      - credit_limit_utilized
      - legal
      - name
      - seller
      - seller_id
      - updated_on
    UserGroupBilling:
      type: object
      properties:
        id:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        email:
          type: string
          format: email
          maxLength: 254
        tax_id:
          type: string
          nullable: true
          maxLength: 255
        street:
          type: string
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        user_group:
          type: string
          format: uuid
      required:
      - city
      - country
      - created_on
      - email
      - latitude
      - longitude
      - postal_code
      - state
      - street
      - updated_on
      - user_group
    UserGroupCreditApplication:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        requested_credit_limit:
          type: number
          format: double
          maximum: 10000000000000000
          minimum: -10000000000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        user_group:
          type: string
          format: uuid
      required:
      - created_on
      - updated_on
      - user_group
    UserGroupLegal:
      type: object
      properties:
        id:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        longitude:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 255
        doing_business_as:
          type: string
          nullable: true
          maxLength: 255
        structure:
          $ref: '#/components/schemas/StructureEnum'
        industry:
          $ref: '#/components/schemas/IndustryEnum'
        street:
          type: string
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 80
        postal_code:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 80
        user_group:
          type: string
          format: uuid
      required:
      - city
      - country
      - created_on
      - industry
      - latitude
      - longitude
      - name
      - postal_code
      - state
      - street
      - structure
      - updated_on
      - user_group
    UserSellerReview:
      type: object
      properties:
        id:
          type: string
          nullable: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        user_id:
          type: string
          format: uuid
          writeOnly: true
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
        seller_id:
          type: string
          format: uuid
          writeOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        title:
          type: string
          maxLength: 255
        rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          nullable: true
        is_verified:
          type: boolean
      required:
      - created_on
      - rating
      - seller
      - seller_id
      - title
      - updated_on
      - user
      - user_id
    UserSellerReviewAggregate:
      type: object
      properties:
        seller_name:
          type: string
        rating_avg:
          type: number
          format: double
        review_count:
          type: integer
      required:
      - rating_avg
      - review_count
      - seller_name
    UserUserAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        user:
          type: string
          format: uuid
        user_address:
          type: string
          format: uuid
      required:
      - created_on
      - updated_on
      - user
      - user_address
    WasteType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
        name:
          type: string
          maxLength: 80
      required:
      - created_on
      - name
      - updated_on
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
